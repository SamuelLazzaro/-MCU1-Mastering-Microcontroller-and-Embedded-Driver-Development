
HelloWorld.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001070  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000038  080011a0  080011a0  000021a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080011d8  080011d8  0000305c  2**0
                  CONTENTS
  4 .ARM          00000000  080011d8  080011d8  0000305c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080011d8  080011d8  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080011d8  080011d8  000021d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080011dc  080011dc  000021dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  080011e0  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  0800123c  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  0800123c  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000008f2  00000000  00000000  00003085  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000310  00000000  00000000  00003977  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000110  00000000  00000000  00003c88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000b8  00000000  00000000  00003d98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002ca6  00000000  00000000  00003e50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001412  00000000  00000000  00006af6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009732  00000000  00000000  00007f08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0001163a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b08  00000000  00000000  00011680  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 000000cc  00000000  00000000  00012188  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	2000005c 	.word	0x2000005c
 800014c:	00000000 	.word	0x00000000
 8000150:	08001188 	.word	0x08001188

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000060 	.word	0x20000060
 800016c:	08001188 	.word	0x08001188

08000170 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;) {
		printf("ciao");
 8000174:	4801      	ldr	r0, [pc, #4]	@ (800017c <main+0xc>)
 8000176:	f000 f98f 	bl	8000498 <iprintf>
 800017a:	e7fb      	b.n	8000174 <main+0x4>
 800017c:	080011a0 	.word	0x080011a0

08000180 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000180:	b580      	push	{r7, lr}
 8000182:	b086      	sub	sp, #24
 8000184:	af00      	add	r7, sp, #0
 8000186:	60f8      	str	r0, [r7, #12]
 8000188:	60b9      	str	r1, [r7, #8]
 800018a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800018c:	2300      	movs	r3, #0
 800018e:	617b      	str	r3, [r7, #20]
 8000190:	e00a      	b.n	80001a8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000192:	f3af 8000 	nop.w
 8000196:	4601      	mov	r1, r0
 8000198:	68bb      	ldr	r3, [r7, #8]
 800019a:	1c5a      	adds	r2, r3, #1
 800019c:	60ba      	str	r2, [r7, #8]
 800019e:	b2ca      	uxtb	r2, r1
 80001a0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001a2:	697b      	ldr	r3, [r7, #20]
 80001a4:	3301      	adds	r3, #1
 80001a6:	617b      	str	r3, [r7, #20]
 80001a8:	697a      	ldr	r2, [r7, #20]
 80001aa:	687b      	ldr	r3, [r7, #4]
 80001ac:	429a      	cmp	r2, r3
 80001ae:	dbf0      	blt.n	8000192 <_read+0x12>
  }

  return len;
 80001b0:	687b      	ldr	r3, [r7, #4]
}
 80001b2:	4618      	mov	r0, r3
 80001b4:	3718      	adds	r7, #24
 80001b6:	46bd      	mov	sp, r7
 80001b8:	bd80      	pop	{r7, pc}

080001ba <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80001ba:	b580      	push	{r7, lr}
 80001bc:	b086      	sub	sp, #24
 80001be:	af00      	add	r7, sp, #0
 80001c0:	60f8      	str	r0, [r7, #12]
 80001c2:	60b9      	str	r1, [r7, #8]
 80001c4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001c6:	2300      	movs	r3, #0
 80001c8:	617b      	str	r3, [r7, #20]
 80001ca:	e009      	b.n	80001e0 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80001cc:	68bb      	ldr	r3, [r7, #8]
 80001ce:	1c5a      	adds	r2, r3, #1
 80001d0:	60ba      	str	r2, [r7, #8]
 80001d2:	781b      	ldrb	r3, [r3, #0]
 80001d4:	4618      	mov	r0, r3
 80001d6:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001da:	697b      	ldr	r3, [r7, #20]
 80001dc:	3301      	adds	r3, #1
 80001de:	617b      	str	r3, [r7, #20]
 80001e0:	697a      	ldr	r2, [r7, #20]
 80001e2:	687b      	ldr	r3, [r7, #4]
 80001e4:	429a      	cmp	r2, r3
 80001e6:	dbf1      	blt.n	80001cc <_write+0x12>
  }
  return len;
 80001e8:	687b      	ldr	r3, [r7, #4]
}
 80001ea:	4618      	mov	r0, r3
 80001ec:	3718      	adds	r7, #24
 80001ee:	46bd      	mov	sp, r7
 80001f0:	bd80      	pop	{r7, pc}

080001f2 <_close>:

int _close(int file)
{
 80001f2:	b480      	push	{r7}
 80001f4:	b083      	sub	sp, #12
 80001f6:	af00      	add	r7, sp, #0
 80001f8:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80001fa:	f04f 33ff 	mov.w	r3, #4294967295
}
 80001fe:	4618      	mov	r0, r3
 8000200:	370c      	adds	r7, #12
 8000202:	46bd      	mov	sp, r7
 8000204:	bc80      	pop	{r7}
 8000206:	4770      	bx	lr

08000208 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000208:	b480      	push	{r7}
 800020a:	b083      	sub	sp, #12
 800020c:	af00      	add	r7, sp, #0
 800020e:	6078      	str	r0, [r7, #4]
 8000210:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000212:	683b      	ldr	r3, [r7, #0]
 8000214:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000218:	605a      	str	r2, [r3, #4]
  return 0;
 800021a:	2300      	movs	r3, #0
}
 800021c:	4618      	mov	r0, r3
 800021e:	370c      	adds	r7, #12
 8000220:	46bd      	mov	sp, r7
 8000222:	bc80      	pop	{r7}
 8000224:	4770      	bx	lr

08000226 <_isatty>:

int _isatty(int file)
{
 8000226:	b480      	push	{r7}
 8000228:	b083      	sub	sp, #12
 800022a:	af00      	add	r7, sp, #0
 800022c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800022e:	2301      	movs	r3, #1
}
 8000230:	4618      	mov	r0, r3
 8000232:	370c      	adds	r7, #12
 8000234:	46bd      	mov	sp, r7
 8000236:	bc80      	pop	{r7}
 8000238:	4770      	bx	lr

0800023a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800023a:	b480      	push	{r7}
 800023c:	b085      	sub	sp, #20
 800023e:	af00      	add	r7, sp, #0
 8000240:	60f8      	str	r0, [r7, #12]
 8000242:	60b9      	str	r1, [r7, #8]
 8000244:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000246:	2300      	movs	r3, #0
}
 8000248:	4618      	mov	r0, r3
 800024a:	3714      	adds	r7, #20
 800024c:	46bd      	mov	sp, r7
 800024e:	bc80      	pop	{r7}
 8000250:	4770      	bx	lr
	...

08000254 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000254:	b580      	push	{r7, lr}
 8000256:	b086      	sub	sp, #24
 8000258:	af00      	add	r7, sp, #0
 800025a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800025c:	4a14      	ldr	r2, [pc, #80]	@ (80002b0 <_sbrk+0x5c>)
 800025e:	4b15      	ldr	r3, [pc, #84]	@ (80002b4 <_sbrk+0x60>)
 8000260:	1ad3      	subs	r3, r2, r3
 8000262:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000264:	697b      	ldr	r3, [r7, #20]
 8000266:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000268:	4b13      	ldr	r3, [pc, #76]	@ (80002b8 <_sbrk+0x64>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	2b00      	cmp	r3, #0
 800026e:	d102      	bne.n	8000276 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000270:	4b11      	ldr	r3, [pc, #68]	@ (80002b8 <_sbrk+0x64>)
 8000272:	4a12      	ldr	r2, [pc, #72]	@ (80002bc <_sbrk+0x68>)
 8000274:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000276:	4b10      	ldr	r3, [pc, #64]	@ (80002b8 <_sbrk+0x64>)
 8000278:	681a      	ldr	r2, [r3, #0]
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	4413      	add	r3, r2
 800027e:	693a      	ldr	r2, [r7, #16]
 8000280:	429a      	cmp	r2, r3
 8000282:	d207      	bcs.n	8000294 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000284:	f000 f9ac 	bl	80005e0 <__errno>
 8000288:	4603      	mov	r3, r0
 800028a:	220c      	movs	r2, #12
 800028c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800028e:	f04f 33ff 	mov.w	r3, #4294967295
 8000292:	e009      	b.n	80002a8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000294:	4b08      	ldr	r3, [pc, #32]	@ (80002b8 <_sbrk+0x64>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800029a:	4b07      	ldr	r3, [pc, #28]	@ (80002b8 <_sbrk+0x64>)
 800029c:	681a      	ldr	r2, [r3, #0]
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	4413      	add	r3, r2
 80002a2:	4a05      	ldr	r2, [pc, #20]	@ (80002b8 <_sbrk+0x64>)
 80002a4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80002a6:	68fb      	ldr	r3, [r7, #12]
}
 80002a8:	4618      	mov	r0, r3
 80002aa:	3718      	adds	r7, #24
 80002ac:	46bd      	mov	sp, r7
 80002ae:	bd80      	pop	{r7, pc}
 80002b0:	20005000 	.word	0x20005000
 80002b4:	00000400 	.word	0x00000400
 80002b8:	20000078 	.word	0x20000078
 80002bc:	200001c8 	.word	0x200001c8

080002c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c0:	480d      	ldr	r0, [pc, #52]	@ (80002f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002c4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c8:	480c      	ldr	r0, [pc, #48]	@ (80002fc <LoopForever+0x6>)
  ldr r1, =_edata
 80002ca:	490d      	ldr	r1, [pc, #52]	@ (8000300 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002cc:	4a0d      	ldr	r2, [pc, #52]	@ (8000304 <LoopForever+0xe>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d0:	e002      	b.n	80002d8 <LoopCopyDataInit>

080002d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d6:	3304      	adds	r3, #4

080002d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002dc:	d3f9      	bcc.n	80002d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002de:	4a0a      	ldr	r2, [pc, #40]	@ (8000308 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e0:	4c0a      	ldr	r4, [pc, #40]	@ (800030c <LoopForever+0x16>)
  movs r3, #0
 80002e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e4:	e001      	b.n	80002ea <LoopFillZerobss>

080002e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e8:	3204      	adds	r2, #4

080002ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002ec:	d3fb      	bcc.n	80002e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ee:	f000 f97d 	bl	80005ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f2:	f7ff ff3d 	bl	8000170 <main>

080002f6 <LoopForever>:

LoopForever:
  b LoopForever
 80002f6:	e7fe      	b.n	80002f6 <LoopForever>
  ldr   r0, =_estack
 80002f8:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80002fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000300:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000304:	080011e0 	.word	0x080011e0
  ldr r2, =_sbss
 8000308:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800030c:	200001c8 	.word	0x200001c8

08000310 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000310:	e7fe      	b.n	8000310 <ADC1_2_IRQHandler>
	...

08000314 <std>:
 8000314:	2300      	movs	r3, #0
 8000316:	b510      	push	{r4, lr}
 8000318:	4604      	mov	r4, r0
 800031a:	e9c0 3300 	strd	r3, r3, [r0]
 800031e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000322:	6083      	str	r3, [r0, #8]
 8000324:	8181      	strh	r1, [r0, #12]
 8000326:	6643      	str	r3, [r0, #100]	@ 0x64
 8000328:	81c2      	strh	r2, [r0, #14]
 800032a:	6183      	str	r3, [r0, #24]
 800032c:	4619      	mov	r1, r3
 800032e:	2208      	movs	r2, #8
 8000330:	305c      	adds	r0, #92	@ 0x5c
 8000332:	f000 f906 	bl	8000542 <memset>
 8000336:	4b0d      	ldr	r3, [pc, #52]	@ (800036c <std+0x58>)
 8000338:	6224      	str	r4, [r4, #32]
 800033a:	6263      	str	r3, [r4, #36]	@ 0x24
 800033c:	4b0c      	ldr	r3, [pc, #48]	@ (8000370 <std+0x5c>)
 800033e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000340:	4b0c      	ldr	r3, [pc, #48]	@ (8000374 <std+0x60>)
 8000342:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000344:	4b0c      	ldr	r3, [pc, #48]	@ (8000378 <std+0x64>)
 8000346:	6323      	str	r3, [r4, #48]	@ 0x30
 8000348:	4b0c      	ldr	r3, [pc, #48]	@ (800037c <std+0x68>)
 800034a:	429c      	cmp	r4, r3
 800034c:	d006      	beq.n	800035c <std+0x48>
 800034e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000352:	4294      	cmp	r4, r2
 8000354:	d002      	beq.n	800035c <std+0x48>
 8000356:	33d0      	adds	r3, #208	@ 0xd0
 8000358:	429c      	cmp	r4, r3
 800035a:	d105      	bne.n	8000368 <std+0x54>
 800035c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000360:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000364:	f000 b966 	b.w	8000634 <__retarget_lock_init_recursive>
 8000368:	bd10      	pop	{r4, pc}
 800036a:	bf00      	nop
 800036c:	080004bd 	.word	0x080004bd
 8000370:	080004df 	.word	0x080004df
 8000374:	08000517 	.word	0x08000517
 8000378:	0800053b 	.word	0x0800053b
 800037c:	2000007c 	.word	0x2000007c

08000380 <stdio_exit_handler>:
 8000380:	4a02      	ldr	r2, [pc, #8]	@ (800038c <stdio_exit_handler+0xc>)
 8000382:	4903      	ldr	r1, [pc, #12]	@ (8000390 <stdio_exit_handler+0x10>)
 8000384:	4803      	ldr	r0, [pc, #12]	@ (8000394 <stdio_exit_handler+0x14>)
 8000386:	f000 b869 	b.w	800045c <_fwalk_sglue>
 800038a:	bf00      	nop
 800038c:	20000000 	.word	0x20000000
 8000390:	08000ecd 	.word	0x08000ecd
 8000394:	20000010 	.word	0x20000010

08000398 <cleanup_stdio>:
 8000398:	6841      	ldr	r1, [r0, #4]
 800039a:	4b0c      	ldr	r3, [pc, #48]	@ (80003cc <cleanup_stdio+0x34>)
 800039c:	b510      	push	{r4, lr}
 800039e:	4299      	cmp	r1, r3
 80003a0:	4604      	mov	r4, r0
 80003a2:	d001      	beq.n	80003a8 <cleanup_stdio+0x10>
 80003a4:	f000 fd92 	bl	8000ecc <_fflush_r>
 80003a8:	68a1      	ldr	r1, [r4, #8]
 80003aa:	4b09      	ldr	r3, [pc, #36]	@ (80003d0 <cleanup_stdio+0x38>)
 80003ac:	4299      	cmp	r1, r3
 80003ae:	d002      	beq.n	80003b6 <cleanup_stdio+0x1e>
 80003b0:	4620      	mov	r0, r4
 80003b2:	f000 fd8b 	bl	8000ecc <_fflush_r>
 80003b6:	68e1      	ldr	r1, [r4, #12]
 80003b8:	4b06      	ldr	r3, [pc, #24]	@ (80003d4 <cleanup_stdio+0x3c>)
 80003ba:	4299      	cmp	r1, r3
 80003bc:	d004      	beq.n	80003c8 <cleanup_stdio+0x30>
 80003be:	4620      	mov	r0, r4
 80003c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80003c4:	f000 bd82 	b.w	8000ecc <_fflush_r>
 80003c8:	bd10      	pop	{r4, pc}
 80003ca:	bf00      	nop
 80003cc:	2000007c 	.word	0x2000007c
 80003d0:	200000e4 	.word	0x200000e4
 80003d4:	2000014c 	.word	0x2000014c

080003d8 <global_stdio_init.part.0>:
 80003d8:	b510      	push	{r4, lr}
 80003da:	4b0b      	ldr	r3, [pc, #44]	@ (8000408 <global_stdio_init.part.0+0x30>)
 80003dc:	4c0b      	ldr	r4, [pc, #44]	@ (800040c <global_stdio_init.part.0+0x34>)
 80003de:	4a0c      	ldr	r2, [pc, #48]	@ (8000410 <global_stdio_init.part.0+0x38>)
 80003e0:	4620      	mov	r0, r4
 80003e2:	601a      	str	r2, [r3, #0]
 80003e4:	2104      	movs	r1, #4
 80003e6:	2200      	movs	r2, #0
 80003e8:	f7ff ff94 	bl	8000314 <std>
 80003ec:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80003f0:	2201      	movs	r2, #1
 80003f2:	2109      	movs	r1, #9
 80003f4:	f7ff ff8e 	bl	8000314 <std>
 80003f8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80003fc:	2202      	movs	r2, #2
 80003fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000402:	2112      	movs	r1, #18
 8000404:	f7ff bf86 	b.w	8000314 <std>
 8000408:	200001b4 	.word	0x200001b4
 800040c:	2000007c 	.word	0x2000007c
 8000410:	08000381 	.word	0x08000381

08000414 <__sfp_lock_acquire>:
 8000414:	4801      	ldr	r0, [pc, #4]	@ (800041c <__sfp_lock_acquire+0x8>)
 8000416:	f000 b90e 	b.w	8000636 <__retarget_lock_acquire_recursive>
 800041a:	bf00      	nop
 800041c:	200001bd 	.word	0x200001bd

08000420 <__sfp_lock_release>:
 8000420:	4801      	ldr	r0, [pc, #4]	@ (8000428 <__sfp_lock_release+0x8>)
 8000422:	f000 b909 	b.w	8000638 <__retarget_lock_release_recursive>
 8000426:	bf00      	nop
 8000428:	200001bd 	.word	0x200001bd

0800042c <__sinit>:
 800042c:	b510      	push	{r4, lr}
 800042e:	4604      	mov	r4, r0
 8000430:	f7ff fff0 	bl	8000414 <__sfp_lock_acquire>
 8000434:	6a23      	ldr	r3, [r4, #32]
 8000436:	b11b      	cbz	r3, 8000440 <__sinit+0x14>
 8000438:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800043c:	f7ff bff0 	b.w	8000420 <__sfp_lock_release>
 8000440:	4b04      	ldr	r3, [pc, #16]	@ (8000454 <__sinit+0x28>)
 8000442:	6223      	str	r3, [r4, #32]
 8000444:	4b04      	ldr	r3, [pc, #16]	@ (8000458 <__sinit+0x2c>)
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	2b00      	cmp	r3, #0
 800044a:	d1f5      	bne.n	8000438 <__sinit+0xc>
 800044c:	f7ff ffc4 	bl	80003d8 <global_stdio_init.part.0>
 8000450:	e7f2      	b.n	8000438 <__sinit+0xc>
 8000452:	bf00      	nop
 8000454:	08000399 	.word	0x08000399
 8000458:	200001b4 	.word	0x200001b4

0800045c <_fwalk_sglue>:
 800045c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000460:	4607      	mov	r7, r0
 8000462:	4688      	mov	r8, r1
 8000464:	4614      	mov	r4, r2
 8000466:	2600      	movs	r6, #0
 8000468:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800046c:	f1b9 0901 	subs.w	r9, r9, #1
 8000470:	d505      	bpl.n	800047e <_fwalk_sglue+0x22>
 8000472:	6824      	ldr	r4, [r4, #0]
 8000474:	2c00      	cmp	r4, #0
 8000476:	d1f7      	bne.n	8000468 <_fwalk_sglue+0xc>
 8000478:	4630      	mov	r0, r6
 800047a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800047e:	89ab      	ldrh	r3, [r5, #12]
 8000480:	2b01      	cmp	r3, #1
 8000482:	d907      	bls.n	8000494 <_fwalk_sglue+0x38>
 8000484:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000488:	3301      	adds	r3, #1
 800048a:	d003      	beq.n	8000494 <_fwalk_sglue+0x38>
 800048c:	4629      	mov	r1, r5
 800048e:	4638      	mov	r0, r7
 8000490:	47c0      	blx	r8
 8000492:	4306      	orrs	r6, r0
 8000494:	3568      	adds	r5, #104	@ 0x68
 8000496:	e7e9      	b.n	800046c <_fwalk_sglue+0x10>

08000498 <iprintf>:
 8000498:	b40f      	push	{r0, r1, r2, r3}
 800049a:	b507      	push	{r0, r1, r2, lr}
 800049c:	4906      	ldr	r1, [pc, #24]	@ (80004b8 <iprintf+0x20>)
 800049e:	ab04      	add	r3, sp, #16
 80004a0:	6808      	ldr	r0, [r1, #0]
 80004a2:	f853 2b04 	ldr.w	r2, [r3], #4
 80004a6:	6881      	ldr	r1, [r0, #8]
 80004a8:	9301      	str	r3, [sp, #4]
 80004aa:	f000 f9e5 	bl	8000878 <_vfiprintf_r>
 80004ae:	b003      	add	sp, #12
 80004b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80004b4:	b004      	add	sp, #16
 80004b6:	4770      	bx	lr
 80004b8:	2000000c 	.word	0x2000000c

080004bc <__sread>:
 80004bc:	b510      	push	{r4, lr}
 80004be:	460c      	mov	r4, r1
 80004c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80004c4:	f000 f868 	bl	8000598 <_read_r>
 80004c8:	2800      	cmp	r0, #0
 80004ca:	bfab      	itete	ge
 80004cc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80004ce:	89a3      	ldrhlt	r3, [r4, #12]
 80004d0:	181b      	addge	r3, r3, r0
 80004d2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80004d6:	bfac      	ite	ge
 80004d8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80004da:	81a3      	strhlt	r3, [r4, #12]
 80004dc:	bd10      	pop	{r4, pc}

080004de <__swrite>:
 80004de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80004e2:	461f      	mov	r7, r3
 80004e4:	898b      	ldrh	r3, [r1, #12]
 80004e6:	4605      	mov	r5, r0
 80004e8:	05db      	lsls	r3, r3, #23
 80004ea:	460c      	mov	r4, r1
 80004ec:	4616      	mov	r6, r2
 80004ee:	d505      	bpl.n	80004fc <__swrite+0x1e>
 80004f0:	2302      	movs	r3, #2
 80004f2:	2200      	movs	r2, #0
 80004f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80004f8:	f000 f83c 	bl	8000574 <_lseek_r>
 80004fc:	89a3      	ldrh	r3, [r4, #12]
 80004fe:	4632      	mov	r2, r6
 8000500:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000504:	81a3      	strh	r3, [r4, #12]
 8000506:	4628      	mov	r0, r5
 8000508:	463b      	mov	r3, r7
 800050a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800050e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000512:	f000 b853 	b.w	80005bc <_write_r>

08000516 <__sseek>:
 8000516:	b510      	push	{r4, lr}
 8000518:	460c      	mov	r4, r1
 800051a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800051e:	f000 f829 	bl	8000574 <_lseek_r>
 8000522:	1c43      	adds	r3, r0, #1
 8000524:	89a3      	ldrh	r3, [r4, #12]
 8000526:	bf15      	itete	ne
 8000528:	6560      	strne	r0, [r4, #84]	@ 0x54
 800052a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800052e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000532:	81a3      	strheq	r3, [r4, #12]
 8000534:	bf18      	it	ne
 8000536:	81a3      	strhne	r3, [r4, #12]
 8000538:	bd10      	pop	{r4, pc}

0800053a <__sclose>:
 800053a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800053e:	f000 b809 	b.w	8000554 <_close_r>

08000542 <memset>:
 8000542:	4603      	mov	r3, r0
 8000544:	4402      	add	r2, r0
 8000546:	4293      	cmp	r3, r2
 8000548:	d100      	bne.n	800054c <memset+0xa>
 800054a:	4770      	bx	lr
 800054c:	f803 1b01 	strb.w	r1, [r3], #1
 8000550:	e7f9      	b.n	8000546 <memset+0x4>
	...

08000554 <_close_r>:
 8000554:	b538      	push	{r3, r4, r5, lr}
 8000556:	2300      	movs	r3, #0
 8000558:	4d05      	ldr	r5, [pc, #20]	@ (8000570 <_close_r+0x1c>)
 800055a:	4604      	mov	r4, r0
 800055c:	4608      	mov	r0, r1
 800055e:	602b      	str	r3, [r5, #0]
 8000560:	f7ff fe47 	bl	80001f2 <_close>
 8000564:	1c43      	adds	r3, r0, #1
 8000566:	d102      	bne.n	800056e <_close_r+0x1a>
 8000568:	682b      	ldr	r3, [r5, #0]
 800056a:	b103      	cbz	r3, 800056e <_close_r+0x1a>
 800056c:	6023      	str	r3, [r4, #0]
 800056e:	bd38      	pop	{r3, r4, r5, pc}
 8000570:	200001b8 	.word	0x200001b8

08000574 <_lseek_r>:
 8000574:	b538      	push	{r3, r4, r5, lr}
 8000576:	4604      	mov	r4, r0
 8000578:	4608      	mov	r0, r1
 800057a:	4611      	mov	r1, r2
 800057c:	2200      	movs	r2, #0
 800057e:	4d05      	ldr	r5, [pc, #20]	@ (8000594 <_lseek_r+0x20>)
 8000580:	602a      	str	r2, [r5, #0]
 8000582:	461a      	mov	r2, r3
 8000584:	f7ff fe59 	bl	800023a <_lseek>
 8000588:	1c43      	adds	r3, r0, #1
 800058a:	d102      	bne.n	8000592 <_lseek_r+0x1e>
 800058c:	682b      	ldr	r3, [r5, #0]
 800058e:	b103      	cbz	r3, 8000592 <_lseek_r+0x1e>
 8000590:	6023      	str	r3, [r4, #0]
 8000592:	bd38      	pop	{r3, r4, r5, pc}
 8000594:	200001b8 	.word	0x200001b8

08000598 <_read_r>:
 8000598:	b538      	push	{r3, r4, r5, lr}
 800059a:	4604      	mov	r4, r0
 800059c:	4608      	mov	r0, r1
 800059e:	4611      	mov	r1, r2
 80005a0:	2200      	movs	r2, #0
 80005a2:	4d05      	ldr	r5, [pc, #20]	@ (80005b8 <_read_r+0x20>)
 80005a4:	602a      	str	r2, [r5, #0]
 80005a6:	461a      	mov	r2, r3
 80005a8:	f7ff fdea 	bl	8000180 <_read>
 80005ac:	1c43      	adds	r3, r0, #1
 80005ae:	d102      	bne.n	80005b6 <_read_r+0x1e>
 80005b0:	682b      	ldr	r3, [r5, #0]
 80005b2:	b103      	cbz	r3, 80005b6 <_read_r+0x1e>
 80005b4:	6023      	str	r3, [r4, #0]
 80005b6:	bd38      	pop	{r3, r4, r5, pc}
 80005b8:	200001b8 	.word	0x200001b8

080005bc <_write_r>:
 80005bc:	b538      	push	{r3, r4, r5, lr}
 80005be:	4604      	mov	r4, r0
 80005c0:	4608      	mov	r0, r1
 80005c2:	4611      	mov	r1, r2
 80005c4:	2200      	movs	r2, #0
 80005c6:	4d05      	ldr	r5, [pc, #20]	@ (80005dc <_write_r+0x20>)
 80005c8:	602a      	str	r2, [r5, #0]
 80005ca:	461a      	mov	r2, r3
 80005cc:	f7ff fdf5 	bl	80001ba <_write>
 80005d0:	1c43      	adds	r3, r0, #1
 80005d2:	d102      	bne.n	80005da <_write_r+0x1e>
 80005d4:	682b      	ldr	r3, [r5, #0]
 80005d6:	b103      	cbz	r3, 80005da <_write_r+0x1e>
 80005d8:	6023      	str	r3, [r4, #0]
 80005da:	bd38      	pop	{r3, r4, r5, pc}
 80005dc:	200001b8 	.word	0x200001b8

080005e0 <__errno>:
 80005e0:	4b01      	ldr	r3, [pc, #4]	@ (80005e8 <__errno+0x8>)
 80005e2:	6818      	ldr	r0, [r3, #0]
 80005e4:	4770      	bx	lr
 80005e6:	bf00      	nop
 80005e8:	2000000c 	.word	0x2000000c

080005ec <__libc_init_array>:
 80005ec:	b570      	push	{r4, r5, r6, lr}
 80005ee:	2600      	movs	r6, #0
 80005f0:	4d0c      	ldr	r5, [pc, #48]	@ (8000624 <__libc_init_array+0x38>)
 80005f2:	4c0d      	ldr	r4, [pc, #52]	@ (8000628 <__libc_init_array+0x3c>)
 80005f4:	1b64      	subs	r4, r4, r5
 80005f6:	10a4      	asrs	r4, r4, #2
 80005f8:	42a6      	cmp	r6, r4
 80005fa:	d109      	bne.n	8000610 <__libc_init_array+0x24>
 80005fc:	f000 fdc4 	bl	8001188 <_init>
 8000600:	2600      	movs	r6, #0
 8000602:	4d0a      	ldr	r5, [pc, #40]	@ (800062c <__libc_init_array+0x40>)
 8000604:	4c0a      	ldr	r4, [pc, #40]	@ (8000630 <__libc_init_array+0x44>)
 8000606:	1b64      	subs	r4, r4, r5
 8000608:	10a4      	asrs	r4, r4, #2
 800060a:	42a6      	cmp	r6, r4
 800060c:	d105      	bne.n	800061a <__libc_init_array+0x2e>
 800060e:	bd70      	pop	{r4, r5, r6, pc}
 8000610:	f855 3b04 	ldr.w	r3, [r5], #4
 8000614:	4798      	blx	r3
 8000616:	3601      	adds	r6, #1
 8000618:	e7ee      	b.n	80005f8 <__libc_init_array+0xc>
 800061a:	f855 3b04 	ldr.w	r3, [r5], #4
 800061e:	4798      	blx	r3
 8000620:	3601      	adds	r6, #1
 8000622:	e7f2      	b.n	800060a <__libc_init_array+0x1e>
 8000624:	080011d8 	.word	0x080011d8
 8000628:	080011d8 	.word	0x080011d8
 800062c:	080011d8 	.word	0x080011d8
 8000630:	080011dc 	.word	0x080011dc

08000634 <__retarget_lock_init_recursive>:
 8000634:	4770      	bx	lr

08000636 <__retarget_lock_acquire_recursive>:
 8000636:	4770      	bx	lr

08000638 <__retarget_lock_release_recursive>:
 8000638:	4770      	bx	lr
	...

0800063c <_free_r>:
 800063c:	b538      	push	{r3, r4, r5, lr}
 800063e:	4605      	mov	r5, r0
 8000640:	2900      	cmp	r1, #0
 8000642:	d040      	beq.n	80006c6 <_free_r+0x8a>
 8000644:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000648:	1f0c      	subs	r4, r1, #4
 800064a:	2b00      	cmp	r3, #0
 800064c:	bfb8      	it	lt
 800064e:	18e4      	addlt	r4, r4, r3
 8000650:	f000 f8de 	bl	8000810 <__malloc_lock>
 8000654:	4a1c      	ldr	r2, [pc, #112]	@ (80006c8 <_free_r+0x8c>)
 8000656:	6813      	ldr	r3, [r2, #0]
 8000658:	b933      	cbnz	r3, 8000668 <_free_r+0x2c>
 800065a:	6063      	str	r3, [r4, #4]
 800065c:	6014      	str	r4, [r2, #0]
 800065e:	4628      	mov	r0, r5
 8000660:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000664:	f000 b8da 	b.w	800081c <__malloc_unlock>
 8000668:	42a3      	cmp	r3, r4
 800066a:	d908      	bls.n	800067e <_free_r+0x42>
 800066c:	6820      	ldr	r0, [r4, #0]
 800066e:	1821      	adds	r1, r4, r0
 8000670:	428b      	cmp	r3, r1
 8000672:	bf01      	itttt	eq
 8000674:	6819      	ldreq	r1, [r3, #0]
 8000676:	685b      	ldreq	r3, [r3, #4]
 8000678:	1809      	addeq	r1, r1, r0
 800067a:	6021      	streq	r1, [r4, #0]
 800067c:	e7ed      	b.n	800065a <_free_r+0x1e>
 800067e:	461a      	mov	r2, r3
 8000680:	685b      	ldr	r3, [r3, #4]
 8000682:	b10b      	cbz	r3, 8000688 <_free_r+0x4c>
 8000684:	42a3      	cmp	r3, r4
 8000686:	d9fa      	bls.n	800067e <_free_r+0x42>
 8000688:	6811      	ldr	r1, [r2, #0]
 800068a:	1850      	adds	r0, r2, r1
 800068c:	42a0      	cmp	r0, r4
 800068e:	d10b      	bne.n	80006a8 <_free_r+0x6c>
 8000690:	6820      	ldr	r0, [r4, #0]
 8000692:	4401      	add	r1, r0
 8000694:	1850      	adds	r0, r2, r1
 8000696:	4283      	cmp	r3, r0
 8000698:	6011      	str	r1, [r2, #0]
 800069a:	d1e0      	bne.n	800065e <_free_r+0x22>
 800069c:	6818      	ldr	r0, [r3, #0]
 800069e:	685b      	ldr	r3, [r3, #4]
 80006a0:	4408      	add	r0, r1
 80006a2:	6010      	str	r0, [r2, #0]
 80006a4:	6053      	str	r3, [r2, #4]
 80006a6:	e7da      	b.n	800065e <_free_r+0x22>
 80006a8:	d902      	bls.n	80006b0 <_free_r+0x74>
 80006aa:	230c      	movs	r3, #12
 80006ac:	602b      	str	r3, [r5, #0]
 80006ae:	e7d6      	b.n	800065e <_free_r+0x22>
 80006b0:	6820      	ldr	r0, [r4, #0]
 80006b2:	1821      	adds	r1, r4, r0
 80006b4:	428b      	cmp	r3, r1
 80006b6:	bf01      	itttt	eq
 80006b8:	6819      	ldreq	r1, [r3, #0]
 80006ba:	685b      	ldreq	r3, [r3, #4]
 80006bc:	1809      	addeq	r1, r1, r0
 80006be:	6021      	streq	r1, [r4, #0]
 80006c0:	6063      	str	r3, [r4, #4]
 80006c2:	6054      	str	r4, [r2, #4]
 80006c4:	e7cb      	b.n	800065e <_free_r+0x22>
 80006c6:	bd38      	pop	{r3, r4, r5, pc}
 80006c8:	200001c4 	.word	0x200001c4

080006cc <sbrk_aligned>:
 80006cc:	b570      	push	{r4, r5, r6, lr}
 80006ce:	4e0f      	ldr	r6, [pc, #60]	@ (800070c <sbrk_aligned+0x40>)
 80006d0:	460c      	mov	r4, r1
 80006d2:	6831      	ldr	r1, [r6, #0]
 80006d4:	4605      	mov	r5, r0
 80006d6:	b911      	cbnz	r1, 80006de <sbrk_aligned+0x12>
 80006d8:	f000 fcb4 	bl	8001044 <_sbrk_r>
 80006dc:	6030      	str	r0, [r6, #0]
 80006de:	4621      	mov	r1, r4
 80006e0:	4628      	mov	r0, r5
 80006e2:	f000 fcaf 	bl	8001044 <_sbrk_r>
 80006e6:	1c43      	adds	r3, r0, #1
 80006e8:	d103      	bne.n	80006f2 <sbrk_aligned+0x26>
 80006ea:	f04f 34ff 	mov.w	r4, #4294967295
 80006ee:	4620      	mov	r0, r4
 80006f0:	bd70      	pop	{r4, r5, r6, pc}
 80006f2:	1cc4      	adds	r4, r0, #3
 80006f4:	f024 0403 	bic.w	r4, r4, #3
 80006f8:	42a0      	cmp	r0, r4
 80006fa:	d0f8      	beq.n	80006ee <sbrk_aligned+0x22>
 80006fc:	1a21      	subs	r1, r4, r0
 80006fe:	4628      	mov	r0, r5
 8000700:	f000 fca0 	bl	8001044 <_sbrk_r>
 8000704:	3001      	adds	r0, #1
 8000706:	d1f2      	bne.n	80006ee <sbrk_aligned+0x22>
 8000708:	e7ef      	b.n	80006ea <sbrk_aligned+0x1e>
 800070a:	bf00      	nop
 800070c:	200001c0 	.word	0x200001c0

08000710 <_malloc_r>:
 8000710:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000714:	1ccd      	adds	r5, r1, #3
 8000716:	f025 0503 	bic.w	r5, r5, #3
 800071a:	3508      	adds	r5, #8
 800071c:	2d0c      	cmp	r5, #12
 800071e:	bf38      	it	cc
 8000720:	250c      	movcc	r5, #12
 8000722:	2d00      	cmp	r5, #0
 8000724:	4606      	mov	r6, r0
 8000726:	db01      	blt.n	800072c <_malloc_r+0x1c>
 8000728:	42a9      	cmp	r1, r5
 800072a:	d904      	bls.n	8000736 <_malloc_r+0x26>
 800072c:	230c      	movs	r3, #12
 800072e:	6033      	str	r3, [r6, #0]
 8000730:	2000      	movs	r0, #0
 8000732:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000736:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800080c <_malloc_r+0xfc>
 800073a:	f000 f869 	bl	8000810 <__malloc_lock>
 800073e:	f8d8 3000 	ldr.w	r3, [r8]
 8000742:	461c      	mov	r4, r3
 8000744:	bb44      	cbnz	r4, 8000798 <_malloc_r+0x88>
 8000746:	4629      	mov	r1, r5
 8000748:	4630      	mov	r0, r6
 800074a:	f7ff ffbf 	bl	80006cc <sbrk_aligned>
 800074e:	1c43      	adds	r3, r0, #1
 8000750:	4604      	mov	r4, r0
 8000752:	d158      	bne.n	8000806 <_malloc_r+0xf6>
 8000754:	f8d8 4000 	ldr.w	r4, [r8]
 8000758:	4627      	mov	r7, r4
 800075a:	2f00      	cmp	r7, #0
 800075c:	d143      	bne.n	80007e6 <_malloc_r+0xd6>
 800075e:	2c00      	cmp	r4, #0
 8000760:	d04b      	beq.n	80007fa <_malloc_r+0xea>
 8000762:	6823      	ldr	r3, [r4, #0]
 8000764:	4639      	mov	r1, r7
 8000766:	4630      	mov	r0, r6
 8000768:	eb04 0903 	add.w	r9, r4, r3
 800076c:	f000 fc6a 	bl	8001044 <_sbrk_r>
 8000770:	4581      	cmp	r9, r0
 8000772:	d142      	bne.n	80007fa <_malloc_r+0xea>
 8000774:	6821      	ldr	r1, [r4, #0]
 8000776:	4630      	mov	r0, r6
 8000778:	1a6d      	subs	r5, r5, r1
 800077a:	4629      	mov	r1, r5
 800077c:	f7ff ffa6 	bl	80006cc <sbrk_aligned>
 8000780:	3001      	adds	r0, #1
 8000782:	d03a      	beq.n	80007fa <_malloc_r+0xea>
 8000784:	6823      	ldr	r3, [r4, #0]
 8000786:	442b      	add	r3, r5
 8000788:	6023      	str	r3, [r4, #0]
 800078a:	f8d8 3000 	ldr.w	r3, [r8]
 800078e:	685a      	ldr	r2, [r3, #4]
 8000790:	bb62      	cbnz	r2, 80007ec <_malloc_r+0xdc>
 8000792:	f8c8 7000 	str.w	r7, [r8]
 8000796:	e00f      	b.n	80007b8 <_malloc_r+0xa8>
 8000798:	6822      	ldr	r2, [r4, #0]
 800079a:	1b52      	subs	r2, r2, r5
 800079c:	d420      	bmi.n	80007e0 <_malloc_r+0xd0>
 800079e:	2a0b      	cmp	r2, #11
 80007a0:	d917      	bls.n	80007d2 <_malloc_r+0xc2>
 80007a2:	1961      	adds	r1, r4, r5
 80007a4:	42a3      	cmp	r3, r4
 80007a6:	6025      	str	r5, [r4, #0]
 80007a8:	bf18      	it	ne
 80007aa:	6059      	strne	r1, [r3, #4]
 80007ac:	6863      	ldr	r3, [r4, #4]
 80007ae:	bf08      	it	eq
 80007b0:	f8c8 1000 	streq.w	r1, [r8]
 80007b4:	5162      	str	r2, [r4, r5]
 80007b6:	604b      	str	r3, [r1, #4]
 80007b8:	4630      	mov	r0, r6
 80007ba:	f000 f82f 	bl	800081c <__malloc_unlock>
 80007be:	f104 000b 	add.w	r0, r4, #11
 80007c2:	1d23      	adds	r3, r4, #4
 80007c4:	f020 0007 	bic.w	r0, r0, #7
 80007c8:	1ac2      	subs	r2, r0, r3
 80007ca:	bf1c      	itt	ne
 80007cc:	1a1b      	subne	r3, r3, r0
 80007ce:	50a3      	strne	r3, [r4, r2]
 80007d0:	e7af      	b.n	8000732 <_malloc_r+0x22>
 80007d2:	6862      	ldr	r2, [r4, #4]
 80007d4:	42a3      	cmp	r3, r4
 80007d6:	bf0c      	ite	eq
 80007d8:	f8c8 2000 	streq.w	r2, [r8]
 80007dc:	605a      	strne	r2, [r3, #4]
 80007de:	e7eb      	b.n	80007b8 <_malloc_r+0xa8>
 80007e0:	4623      	mov	r3, r4
 80007e2:	6864      	ldr	r4, [r4, #4]
 80007e4:	e7ae      	b.n	8000744 <_malloc_r+0x34>
 80007e6:	463c      	mov	r4, r7
 80007e8:	687f      	ldr	r7, [r7, #4]
 80007ea:	e7b6      	b.n	800075a <_malloc_r+0x4a>
 80007ec:	461a      	mov	r2, r3
 80007ee:	685b      	ldr	r3, [r3, #4]
 80007f0:	42a3      	cmp	r3, r4
 80007f2:	d1fb      	bne.n	80007ec <_malloc_r+0xdc>
 80007f4:	2300      	movs	r3, #0
 80007f6:	6053      	str	r3, [r2, #4]
 80007f8:	e7de      	b.n	80007b8 <_malloc_r+0xa8>
 80007fa:	230c      	movs	r3, #12
 80007fc:	4630      	mov	r0, r6
 80007fe:	6033      	str	r3, [r6, #0]
 8000800:	f000 f80c 	bl	800081c <__malloc_unlock>
 8000804:	e794      	b.n	8000730 <_malloc_r+0x20>
 8000806:	6005      	str	r5, [r0, #0]
 8000808:	e7d6      	b.n	80007b8 <_malloc_r+0xa8>
 800080a:	bf00      	nop
 800080c:	200001c4 	.word	0x200001c4

08000810 <__malloc_lock>:
 8000810:	4801      	ldr	r0, [pc, #4]	@ (8000818 <__malloc_lock+0x8>)
 8000812:	f7ff bf10 	b.w	8000636 <__retarget_lock_acquire_recursive>
 8000816:	bf00      	nop
 8000818:	200001bc 	.word	0x200001bc

0800081c <__malloc_unlock>:
 800081c:	4801      	ldr	r0, [pc, #4]	@ (8000824 <__malloc_unlock+0x8>)
 800081e:	f7ff bf0b 	b.w	8000638 <__retarget_lock_release_recursive>
 8000822:	bf00      	nop
 8000824:	200001bc 	.word	0x200001bc

08000828 <__sfputc_r>:
 8000828:	6893      	ldr	r3, [r2, #8]
 800082a:	b410      	push	{r4}
 800082c:	3b01      	subs	r3, #1
 800082e:	2b00      	cmp	r3, #0
 8000830:	6093      	str	r3, [r2, #8]
 8000832:	da07      	bge.n	8000844 <__sfputc_r+0x1c>
 8000834:	6994      	ldr	r4, [r2, #24]
 8000836:	42a3      	cmp	r3, r4
 8000838:	db01      	blt.n	800083e <__sfputc_r+0x16>
 800083a:	290a      	cmp	r1, #10
 800083c:	d102      	bne.n	8000844 <__sfputc_r+0x1c>
 800083e:	bc10      	pop	{r4}
 8000840:	f000 bb6c 	b.w	8000f1c <__swbuf_r>
 8000844:	6813      	ldr	r3, [r2, #0]
 8000846:	1c58      	adds	r0, r3, #1
 8000848:	6010      	str	r0, [r2, #0]
 800084a:	7019      	strb	r1, [r3, #0]
 800084c:	4608      	mov	r0, r1
 800084e:	bc10      	pop	{r4}
 8000850:	4770      	bx	lr

08000852 <__sfputs_r>:
 8000852:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000854:	4606      	mov	r6, r0
 8000856:	460f      	mov	r7, r1
 8000858:	4614      	mov	r4, r2
 800085a:	18d5      	adds	r5, r2, r3
 800085c:	42ac      	cmp	r4, r5
 800085e:	d101      	bne.n	8000864 <__sfputs_r+0x12>
 8000860:	2000      	movs	r0, #0
 8000862:	e007      	b.n	8000874 <__sfputs_r+0x22>
 8000864:	463a      	mov	r2, r7
 8000866:	4630      	mov	r0, r6
 8000868:	f814 1b01 	ldrb.w	r1, [r4], #1
 800086c:	f7ff ffdc 	bl	8000828 <__sfputc_r>
 8000870:	1c43      	adds	r3, r0, #1
 8000872:	d1f3      	bne.n	800085c <__sfputs_r+0xa>
 8000874:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000878 <_vfiprintf_r>:
 8000878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800087c:	460d      	mov	r5, r1
 800087e:	4614      	mov	r4, r2
 8000880:	4698      	mov	r8, r3
 8000882:	4606      	mov	r6, r0
 8000884:	b09d      	sub	sp, #116	@ 0x74
 8000886:	b118      	cbz	r0, 8000890 <_vfiprintf_r+0x18>
 8000888:	6a03      	ldr	r3, [r0, #32]
 800088a:	b90b      	cbnz	r3, 8000890 <_vfiprintf_r+0x18>
 800088c:	f7ff fdce 	bl	800042c <__sinit>
 8000890:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000892:	07d9      	lsls	r1, r3, #31
 8000894:	d405      	bmi.n	80008a2 <_vfiprintf_r+0x2a>
 8000896:	89ab      	ldrh	r3, [r5, #12]
 8000898:	059a      	lsls	r2, r3, #22
 800089a:	d402      	bmi.n	80008a2 <_vfiprintf_r+0x2a>
 800089c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800089e:	f7ff feca 	bl	8000636 <__retarget_lock_acquire_recursive>
 80008a2:	89ab      	ldrh	r3, [r5, #12]
 80008a4:	071b      	lsls	r3, r3, #28
 80008a6:	d501      	bpl.n	80008ac <_vfiprintf_r+0x34>
 80008a8:	692b      	ldr	r3, [r5, #16]
 80008aa:	b99b      	cbnz	r3, 80008d4 <_vfiprintf_r+0x5c>
 80008ac:	4629      	mov	r1, r5
 80008ae:	4630      	mov	r0, r6
 80008b0:	f000 fb72 	bl	8000f98 <__swsetup_r>
 80008b4:	b170      	cbz	r0, 80008d4 <_vfiprintf_r+0x5c>
 80008b6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80008b8:	07dc      	lsls	r4, r3, #31
 80008ba:	d504      	bpl.n	80008c6 <_vfiprintf_r+0x4e>
 80008bc:	f04f 30ff 	mov.w	r0, #4294967295
 80008c0:	b01d      	add	sp, #116	@ 0x74
 80008c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80008c6:	89ab      	ldrh	r3, [r5, #12]
 80008c8:	0598      	lsls	r0, r3, #22
 80008ca:	d4f7      	bmi.n	80008bc <_vfiprintf_r+0x44>
 80008cc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80008ce:	f7ff feb3 	bl	8000638 <__retarget_lock_release_recursive>
 80008d2:	e7f3      	b.n	80008bc <_vfiprintf_r+0x44>
 80008d4:	2300      	movs	r3, #0
 80008d6:	9309      	str	r3, [sp, #36]	@ 0x24
 80008d8:	2320      	movs	r3, #32
 80008da:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80008de:	2330      	movs	r3, #48	@ 0x30
 80008e0:	f04f 0901 	mov.w	r9, #1
 80008e4:	f8cd 800c 	str.w	r8, [sp, #12]
 80008e8:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8000a94 <_vfiprintf_r+0x21c>
 80008ec:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80008f0:	4623      	mov	r3, r4
 80008f2:	469a      	mov	sl, r3
 80008f4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80008f8:	b10a      	cbz	r2, 80008fe <_vfiprintf_r+0x86>
 80008fa:	2a25      	cmp	r2, #37	@ 0x25
 80008fc:	d1f9      	bne.n	80008f2 <_vfiprintf_r+0x7a>
 80008fe:	ebba 0b04 	subs.w	fp, sl, r4
 8000902:	d00b      	beq.n	800091c <_vfiprintf_r+0xa4>
 8000904:	465b      	mov	r3, fp
 8000906:	4622      	mov	r2, r4
 8000908:	4629      	mov	r1, r5
 800090a:	4630      	mov	r0, r6
 800090c:	f7ff ffa1 	bl	8000852 <__sfputs_r>
 8000910:	3001      	adds	r0, #1
 8000912:	f000 80a7 	beq.w	8000a64 <_vfiprintf_r+0x1ec>
 8000916:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000918:	445a      	add	r2, fp
 800091a:	9209      	str	r2, [sp, #36]	@ 0x24
 800091c:	f89a 3000 	ldrb.w	r3, [sl]
 8000920:	2b00      	cmp	r3, #0
 8000922:	f000 809f 	beq.w	8000a64 <_vfiprintf_r+0x1ec>
 8000926:	2300      	movs	r3, #0
 8000928:	f04f 32ff 	mov.w	r2, #4294967295
 800092c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000930:	f10a 0a01 	add.w	sl, sl, #1
 8000934:	9304      	str	r3, [sp, #16]
 8000936:	9307      	str	r3, [sp, #28]
 8000938:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800093c:	931a      	str	r3, [sp, #104]	@ 0x68
 800093e:	4654      	mov	r4, sl
 8000940:	2205      	movs	r2, #5
 8000942:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000946:	4853      	ldr	r0, [pc, #332]	@ (8000a94 <_vfiprintf_r+0x21c>)
 8000948:	f000 fb8c 	bl	8001064 <memchr>
 800094c:	9a04      	ldr	r2, [sp, #16]
 800094e:	b9d8      	cbnz	r0, 8000988 <_vfiprintf_r+0x110>
 8000950:	06d1      	lsls	r1, r2, #27
 8000952:	bf44      	itt	mi
 8000954:	2320      	movmi	r3, #32
 8000956:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800095a:	0713      	lsls	r3, r2, #28
 800095c:	bf44      	itt	mi
 800095e:	232b      	movmi	r3, #43	@ 0x2b
 8000960:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000964:	f89a 3000 	ldrb.w	r3, [sl]
 8000968:	2b2a      	cmp	r3, #42	@ 0x2a
 800096a:	d015      	beq.n	8000998 <_vfiprintf_r+0x120>
 800096c:	4654      	mov	r4, sl
 800096e:	2000      	movs	r0, #0
 8000970:	f04f 0c0a 	mov.w	ip, #10
 8000974:	9a07      	ldr	r2, [sp, #28]
 8000976:	4621      	mov	r1, r4
 8000978:	f811 3b01 	ldrb.w	r3, [r1], #1
 800097c:	3b30      	subs	r3, #48	@ 0x30
 800097e:	2b09      	cmp	r3, #9
 8000980:	d94b      	bls.n	8000a1a <_vfiprintf_r+0x1a2>
 8000982:	b1b0      	cbz	r0, 80009b2 <_vfiprintf_r+0x13a>
 8000984:	9207      	str	r2, [sp, #28]
 8000986:	e014      	b.n	80009b2 <_vfiprintf_r+0x13a>
 8000988:	eba0 0308 	sub.w	r3, r0, r8
 800098c:	fa09 f303 	lsl.w	r3, r9, r3
 8000990:	4313      	orrs	r3, r2
 8000992:	46a2      	mov	sl, r4
 8000994:	9304      	str	r3, [sp, #16]
 8000996:	e7d2      	b.n	800093e <_vfiprintf_r+0xc6>
 8000998:	9b03      	ldr	r3, [sp, #12]
 800099a:	1d19      	adds	r1, r3, #4
 800099c:	681b      	ldr	r3, [r3, #0]
 800099e:	9103      	str	r1, [sp, #12]
 80009a0:	2b00      	cmp	r3, #0
 80009a2:	bfbb      	ittet	lt
 80009a4:	425b      	neglt	r3, r3
 80009a6:	f042 0202 	orrlt.w	r2, r2, #2
 80009aa:	9307      	strge	r3, [sp, #28]
 80009ac:	9307      	strlt	r3, [sp, #28]
 80009ae:	bfb8      	it	lt
 80009b0:	9204      	strlt	r2, [sp, #16]
 80009b2:	7823      	ldrb	r3, [r4, #0]
 80009b4:	2b2e      	cmp	r3, #46	@ 0x2e
 80009b6:	d10a      	bne.n	80009ce <_vfiprintf_r+0x156>
 80009b8:	7863      	ldrb	r3, [r4, #1]
 80009ba:	2b2a      	cmp	r3, #42	@ 0x2a
 80009bc:	d132      	bne.n	8000a24 <_vfiprintf_r+0x1ac>
 80009be:	9b03      	ldr	r3, [sp, #12]
 80009c0:	3402      	adds	r4, #2
 80009c2:	1d1a      	adds	r2, r3, #4
 80009c4:	681b      	ldr	r3, [r3, #0]
 80009c6:	9203      	str	r2, [sp, #12]
 80009c8:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80009cc:	9305      	str	r3, [sp, #20]
 80009ce:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000a98 <_vfiprintf_r+0x220>
 80009d2:	2203      	movs	r2, #3
 80009d4:	4650      	mov	r0, sl
 80009d6:	7821      	ldrb	r1, [r4, #0]
 80009d8:	f000 fb44 	bl	8001064 <memchr>
 80009dc:	b138      	cbz	r0, 80009ee <_vfiprintf_r+0x176>
 80009de:	2240      	movs	r2, #64	@ 0x40
 80009e0:	9b04      	ldr	r3, [sp, #16]
 80009e2:	eba0 000a 	sub.w	r0, r0, sl
 80009e6:	4082      	lsls	r2, r0
 80009e8:	4313      	orrs	r3, r2
 80009ea:	3401      	adds	r4, #1
 80009ec:	9304      	str	r3, [sp, #16]
 80009ee:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009f2:	2206      	movs	r2, #6
 80009f4:	4829      	ldr	r0, [pc, #164]	@ (8000a9c <_vfiprintf_r+0x224>)
 80009f6:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80009fa:	f000 fb33 	bl	8001064 <memchr>
 80009fe:	2800      	cmp	r0, #0
 8000a00:	d03f      	beq.n	8000a82 <_vfiprintf_r+0x20a>
 8000a02:	4b27      	ldr	r3, [pc, #156]	@ (8000aa0 <_vfiprintf_r+0x228>)
 8000a04:	bb1b      	cbnz	r3, 8000a4e <_vfiprintf_r+0x1d6>
 8000a06:	9b03      	ldr	r3, [sp, #12]
 8000a08:	3307      	adds	r3, #7
 8000a0a:	f023 0307 	bic.w	r3, r3, #7
 8000a0e:	3308      	adds	r3, #8
 8000a10:	9303      	str	r3, [sp, #12]
 8000a12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000a14:	443b      	add	r3, r7
 8000a16:	9309      	str	r3, [sp, #36]	@ 0x24
 8000a18:	e76a      	b.n	80008f0 <_vfiprintf_r+0x78>
 8000a1a:	460c      	mov	r4, r1
 8000a1c:	2001      	movs	r0, #1
 8000a1e:	fb0c 3202 	mla	r2, ip, r2, r3
 8000a22:	e7a8      	b.n	8000976 <_vfiprintf_r+0xfe>
 8000a24:	2300      	movs	r3, #0
 8000a26:	f04f 0c0a 	mov.w	ip, #10
 8000a2a:	4619      	mov	r1, r3
 8000a2c:	3401      	adds	r4, #1
 8000a2e:	9305      	str	r3, [sp, #20]
 8000a30:	4620      	mov	r0, r4
 8000a32:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000a36:	3a30      	subs	r2, #48	@ 0x30
 8000a38:	2a09      	cmp	r2, #9
 8000a3a:	d903      	bls.n	8000a44 <_vfiprintf_r+0x1cc>
 8000a3c:	2b00      	cmp	r3, #0
 8000a3e:	d0c6      	beq.n	80009ce <_vfiprintf_r+0x156>
 8000a40:	9105      	str	r1, [sp, #20]
 8000a42:	e7c4      	b.n	80009ce <_vfiprintf_r+0x156>
 8000a44:	4604      	mov	r4, r0
 8000a46:	2301      	movs	r3, #1
 8000a48:	fb0c 2101 	mla	r1, ip, r1, r2
 8000a4c:	e7f0      	b.n	8000a30 <_vfiprintf_r+0x1b8>
 8000a4e:	ab03      	add	r3, sp, #12
 8000a50:	9300      	str	r3, [sp, #0]
 8000a52:	462a      	mov	r2, r5
 8000a54:	4630      	mov	r0, r6
 8000a56:	4b13      	ldr	r3, [pc, #76]	@ (8000aa4 <_vfiprintf_r+0x22c>)
 8000a58:	a904      	add	r1, sp, #16
 8000a5a:	f3af 8000 	nop.w
 8000a5e:	4607      	mov	r7, r0
 8000a60:	1c78      	adds	r0, r7, #1
 8000a62:	d1d6      	bne.n	8000a12 <_vfiprintf_r+0x19a>
 8000a64:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000a66:	07d9      	lsls	r1, r3, #31
 8000a68:	d405      	bmi.n	8000a76 <_vfiprintf_r+0x1fe>
 8000a6a:	89ab      	ldrh	r3, [r5, #12]
 8000a6c:	059a      	lsls	r2, r3, #22
 8000a6e:	d402      	bmi.n	8000a76 <_vfiprintf_r+0x1fe>
 8000a70:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000a72:	f7ff fde1 	bl	8000638 <__retarget_lock_release_recursive>
 8000a76:	89ab      	ldrh	r3, [r5, #12]
 8000a78:	065b      	lsls	r3, r3, #25
 8000a7a:	f53f af1f 	bmi.w	80008bc <_vfiprintf_r+0x44>
 8000a7e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000a80:	e71e      	b.n	80008c0 <_vfiprintf_r+0x48>
 8000a82:	ab03      	add	r3, sp, #12
 8000a84:	9300      	str	r3, [sp, #0]
 8000a86:	462a      	mov	r2, r5
 8000a88:	4630      	mov	r0, r6
 8000a8a:	4b06      	ldr	r3, [pc, #24]	@ (8000aa4 <_vfiprintf_r+0x22c>)
 8000a8c:	a904      	add	r1, sp, #16
 8000a8e:	f000 f87d 	bl	8000b8c <_printf_i>
 8000a92:	e7e4      	b.n	8000a5e <_vfiprintf_r+0x1e6>
 8000a94:	080011a5 	.word	0x080011a5
 8000a98:	080011ab 	.word	0x080011ab
 8000a9c:	080011af 	.word	0x080011af
 8000aa0:	00000000 	.word	0x00000000
 8000aa4:	08000853 	.word	0x08000853

08000aa8 <_printf_common>:
 8000aa8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000aac:	4616      	mov	r6, r2
 8000aae:	4698      	mov	r8, r3
 8000ab0:	688a      	ldr	r2, [r1, #8]
 8000ab2:	690b      	ldr	r3, [r1, #16]
 8000ab4:	4607      	mov	r7, r0
 8000ab6:	4293      	cmp	r3, r2
 8000ab8:	bfb8      	it	lt
 8000aba:	4613      	movlt	r3, r2
 8000abc:	6033      	str	r3, [r6, #0]
 8000abe:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000ac2:	460c      	mov	r4, r1
 8000ac4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000ac8:	b10a      	cbz	r2, 8000ace <_printf_common+0x26>
 8000aca:	3301      	adds	r3, #1
 8000acc:	6033      	str	r3, [r6, #0]
 8000ace:	6823      	ldr	r3, [r4, #0]
 8000ad0:	0699      	lsls	r1, r3, #26
 8000ad2:	bf42      	ittt	mi
 8000ad4:	6833      	ldrmi	r3, [r6, #0]
 8000ad6:	3302      	addmi	r3, #2
 8000ad8:	6033      	strmi	r3, [r6, #0]
 8000ada:	6825      	ldr	r5, [r4, #0]
 8000adc:	f015 0506 	ands.w	r5, r5, #6
 8000ae0:	d106      	bne.n	8000af0 <_printf_common+0x48>
 8000ae2:	f104 0a19 	add.w	sl, r4, #25
 8000ae6:	68e3      	ldr	r3, [r4, #12]
 8000ae8:	6832      	ldr	r2, [r6, #0]
 8000aea:	1a9b      	subs	r3, r3, r2
 8000aec:	42ab      	cmp	r3, r5
 8000aee:	dc2b      	bgt.n	8000b48 <_printf_common+0xa0>
 8000af0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000af4:	6822      	ldr	r2, [r4, #0]
 8000af6:	3b00      	subs	r3, #0
 8000af8:	bf18      	it	ne
 8000afa:	2301      	movne	r3, #1
 8000afc:	0692      	lsls	r2, r2, #26
 8000afe:	d430      	bmi.n	8000b62 <_printf_common+0xba>
 8000b00:	4641      	mov	r1, r8
 8000b02:	4638      	mov	r0, r7
 8000b04:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000b08:	47c8      	blx	r9
 8000b0a:	3001      	adds	r0, #1
 8000b0c:	d023      	beq.n	8000b56 <_printf_common+0xae>
 8000b0e:	6823      	ldr	r3, [r4, #0]
 8000b10:	6922      	ldr	r2, [r4, #16]
 8000b12:	f003 0306 	and.w	r3, r3, #6
 8000b16:	2b04      	cmp	r3, #4
 8000b18:	bf14      	ite	ne
 8000b1a:	2500      	movne	r5, #0
 8000b1c:	6833      	ldreq	r3, [r6, #0]
 8000b1e:	f04f 0600 	mov.w	r6, #0
 8000b22:	bf08      	it	eq
 8000b24:	68e5      	ldreq	r5, [r4, #12]
 8000b26:	f104 041a 	add.w	r4, r4, #26
 8000b2a:	bf08      	it	eq
 8000b2c:	1aed      	subeq	r5, r5, r3
 8000b2e:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8000b32:	bf08      	it	eq
 8000b34:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000b38:	4293      	cmp	r3, r2
 8000b3a:	bfc4      	itt	gt
 8000b3c:	1a9b      	subgt	r3, r3, r2
 8000b3e:	18ed      	addgt	r5, r5, r3
 8000b40:	42b5      	cmp	r5, r6
 8000b42:	d11a      	bne.n	8000b7a <_printf_common+0xd2>
 8000b44:	2000      	movs	r0, #0
 8000b46:	e008      	b.n	8000b5a <_printf_common+0xb2>
 8000b48:	2301      	movs	r3, #1
 8000b4a:	4652      	mov	r2, sl
 8000b4c:	4641      	mov	r1, r8
 8000b4e:	4638      	mov	r0, r7
 8000b50:	47c8      	blx	r9
 8000b52:	3001      	adds	r0, #1
 8000b54:	d103      	bne.n	8000b5e <_printf_common+0xb6>
 8000b56:	f04f 30ff 	mov.w	r0, #4294967295
 8000b5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b5e:	3501      	adds	r5, #1
 8000b60:	e7c1      	b.n	8000ae6 <_printf_common+0x3e>
 8000b62:	2030      	movs	r0, #48	@ 0x30
 8000b64:	18e1      	adds	r1, r4, r3
 8000b66:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000b6a:	1c5a      	adds	r2, r3, #1
 8000b6c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000b70:	4422      	add	r2, r4
 8000b72:	3302      	adds	r3, #2
 8000b74:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000b78:	e7c2      	b.n	8000b00 <_printf_common+0x58>
 8000b7a:	2301      	movs	r3, #1
 8000b7c:	4622      	mov	r2, r4
 8000b7e:	4641      	mov	r1, r8
 8000b80:	4638      	mov	r0, r7
 8000b82:	47c8      	blx	r9
 8000b84:	3001      	adds	r0, #1
 8000b86:	d0e6      	beq.n	8000b56 <_printf_common+0xae>
 8000b88:	3601      	adds	r6, #1
 8000b8a:	e7d9      	b.n	8000b40 <_printf_common+0x98>

08000b8c <_printf_i>:
 8000b8c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000b90:	7e0f      	ldrb	r7, [r1, #24]
 8000b92:	4691      	mov	r9, r2
 8000b94:	2f78      	cmp	r7, #120	@ 0x78
 8000b96:	4680      	mov	r8, r0
 8000b98:	460c      	mov	r4, r1
 8000b9a:	469a      	mov	sl, r3
 8000b9c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000b9e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000ba2:	d807      	bhi.n	8000bb4 <_printf_i+0x28>
 8000ba4:	2f62      	cmp	r7, #98	@ 0x62
 8000ba6:	d80a      	bhi.n	8000bbe <_printf_i+0x32>
 8000ba8:	2f00      	cmp	r7, #0
 8000baa:	f000 80d3 	beq.w	8000d54 <_printf_i+0x1c8>
 8000bae:	2f58      	cmp	r7, #88	@ 0x58
 8000bb0:	f000 80ba 	beq.w	8000d28 <_printf_i+0x19c>
 8000bb4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000bb8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000bbc:	e03a      	b.n	8000c34 <_printf_i+0xa8>
 8000bbe:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000bc2:	2b15      	cmp	r3, #21
 8000bc4:	d8f6      	bhi.n	8000bb4 <_printf_i+0x28>
 8000bc6:	a101      	add	r1, pc, #4	@ (adr r1, 8000bcc <_printf_i+0x40>)
 8000bc8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000bcc:	08000c25 	.word	0x08000c25
 8000bd0:	08000c39 	.word	0x08000c39
 8000bd4:	08000bb5 	.word	0x08000bb5
 8000bd8:	08000bb5 	.word	0x08000bb5
 8000bdc:	08000bb5 	.word	0x08000bb5
 8000be0:	08000bb5 	.word	0x08000bb5
 8000be4:	08000c39 	.word	0x08000c39
 8000be8:	08000bb5 	.word	0x08000bb5
 8000bec:	08000bb5 	.word	0x08000bb5
 8000bf0:	08000bb5 	.word	0x08000bb5
 8000bf4:	08000bb5 	.word	0x08000bb5
 8000bf8:	08000d3b 	.word	0x08000d3b
 8000bfc:	08000c63 	.word	0x08000c63
 8000c00:	08000cf5 	.word	0x08000cf5
 8000c04:	08000bb5 	.word	0x08000bb5
 8000c08:	08000bb5 	.word	0x08000bb5
 8000c0c:	08000d5d 	.word	0x08000d5d
 8000c10:	08000bb5 	.word	0x08000bb5
 8000c14:	08000c63 	.word	0x08000c63
 8000c18:	08000bb5 	.word	0x08000bb5
 8000c1c:	08000bb5 	.word	0x08000bb5
 8000c20:	08000cfd 	.word	0x08000cfd
 8000c24:	6833      	ldr	r3, [r6, #0]
 8000c26:	1d1a      	adds	r2, r3, #4
 8000c28:	681b      	ldr	r3, [r3, #0]
 8000c2a:	6032      	str	r2, [r6, #0]
 8000c2c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000c30:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000c34:	2301      	movs	r3, #1
 8000c36:	e09e      	b.n	8000d76 <_printf_i+0x1ea>
 8000c38:	6833      	ldr	r3, [r6, #0]
 8000c3a:	6820      	ldr	r0, [r4, #0]
 8000c3c:	1d19      	adds	r1, r3, #4
 8000c3e:	6031      	str	r1, [r6, #0]
 8000c40:	0606      	lsls	r6, r0, #24
 8000c42:	d501      	bpl.n	8000c48 <_printf_i+0xbc>
 8000c44:	681d      	ldr	r5, [r3, #0]
 8000c46:	e003      	b.n	8000c50 <_printf_i+0xc4>
 8000c48:	0645      	lsls	r5, r0, #25
 8000c4a:	d5fb      	bpl.n	8000c44 <_printf_i+0xb8>
 8000c4c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000c50:	2d00      	cmp	r5, #0
 8000c52:	da03      	bge.n	8000c5c <_printf_i+0xd0>
 8000c54:	232d      	movs	r3, #45	@ 0x2d
 8000c56:	426d      	negs	r5, r5
 8000c58:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000c5c:	230a      	movs	r3, #10
 8000c5e:	4859      	ldr	r0, [pc, #356]	@ (8000dc4 <_printf_i+0x238>)
 8000c60:	e011      	b.n	8000c86 <_printf_i+0xfa>
 8000c62:	6821      	ldr	r1, [r4, #0]
 8000c64:	6833      	ldr	r3, [r6, #0]
 8000c66:	0608      	lsls	r0, r1, #24
 8000c68:	f853 5b04 	ldr.w	r5, [r3], #4
 8000c6c:	d402      	bmi.n	8000c74 <_printf_i+0xe8>
 8000c6e:	0649      	lsls	r1, r1, #25
 8000c70:	bf48      	it	mi
 8000c72:	b2ad      	uxthmi	r5, r5
 8000c74:	2f6f      	cmp	r7, #111	@ 0x6f
 8000c76:	6033      	str	r3, [r6, #0]
 8000c78:	bf14      	ite	ne
 8000c7a:	230a      	movne	r3, #10
 8000c7c:	2308      	moveq	r3, #8
 8000c7e:	4851      	ldr	r0, [pc, #324]	@ (8000dc4 <_printf_i+0x238>)
 8000c80:	2100      	movs	r1, #0
 8000c82:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000c86:	6866      	ldr	r6, [r4, #4]
 8000c88:	2e00      	cmp	r6, #0
 8000c8a:	bfa8      	it	ge
 8000c8c:	6821      	ldrge	r1, [r4, #0]
 8000c8e:	60a6      	str	r6, [r4, #8]
 8000c90:	bfa4      	itt	ge
 8000c92:	f021 0104 	bicge.w	r1, r1, #4
 8000c96:	6021      	strge	r1, [r4, #0]
 8000c98:	b90d      	cbnz	r5, 8000c9e <_printf_i+0x112>
 8000c9a:	2e00      	cmp	r6, #0
 8000c9c:	d04b      	beq.n	8000d36 <_printf_i+0x1aa>
 8000c9e:	4616      	mov	r6, r2
 8000ca0:	fbb5 f1f3 	udiv	r1, r5, r3
 8000ca4:	fb03 5711 	mls	r7, r3, r1, r5
 8000ca8:	5dc7      	ldrb	r7, [r0, r7]
 8000caa:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000cae:	462f      	mov	r7, r5
 8000cb0:	42bb      	cmp	r3, r7
 8000cb2:	460d      	mov	r5, r1
 8000cb4:	d9f4      	bls.n	8000ca0 <_printf_i+0x114>
 8000cb6:	2b08      	cmp	r3, #8
 8000cb8:	d10b      	bne.n	8000cd2 <_printf_i+0x146>
 8000cba:	6823      	ldr	r3, [r4, #0]
 8000cbc:	07df      	lsls	r7, r3, #31
 8000cbe:	d508      	bpl.n	8000cd2 <_printf_i+0x146>
 8000cc0:	6923      	ldr	r3, [r4, #16]
 8000cc2:	6861      	ldr	r1, [r4, #4]
 8000cc4:	4299      	cmp	r1, r3
 8000cc6:	bfde      	ittt	le
 8000cc8:	2330      	movle	r3, #48	@ 0x30
 8000cca:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000cce:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000cd2:	1b92      	subs	r2, r2, r6
 8000cd4:	6122      	str	r2, [r4, #16]
 8000cd6:	464b      	mov	r3, r9
 8000cd8:	4621      	mov	r1, r4
 8000cda:	4640      	mov	r0, r8
 8000cdc:	f8cd a000 	str.w	sl, [sp]
 8000ce0:	aa03      	add	r2, sp, #12
 8000ce2:	f7ff fee1 	bl	8000aa8 <_printf_common>
 8000ce6:	3001      	adds	r0, #1
 8000ce8:	d14a      	bne.n	8000d80 <_printf_i+0x1f4>
 8000cea:	f04f 30ff 	mov.w	r0, #4294967295
 8000cee:	b004      	add	sp, #16
 8000cf0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cf4:	6823      	ldr	r3, [r4, #0]
 8000cf6:	f043 0320 	orr.w	r3, r3, #32
 8000cfa:	6023      	str	r3, [r4, #0]
 8000cfc:	2778      	movs	r7, #120	@ 0x78
 8000cfe:	4832      	ldr	r0, [pc, #200]	@ (8000dc8 <_printf_i+0x23c>)
 8000d00:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000d04:	6823      	ldr	r3, [r4, #0]
 8000d06:	6831      	ldr	r1, [r6, #0]
 8000d08:	061f      	lsls	r7, r3, #24
 8000d0a:	f851 5b04 	ldr.w	r5, [r1], #4
 8000d0e:	d402      	bmi.n	8000d16 <_printf_i+0x18a>
 8000d10:	065f      	lsls	r7, r3, #25
 8000d12:	bf48      	it	mi
 8000d14:	b2ad      	uxthmi	r5, r5
 8000d16:	6031      	str	r1, [r6, #0]
 8000d18:	07d9      	lsls	r1, r3, #31
 8000d1a:	bf44      	itt	mi
 8000d1c:	f043 0320 	orrmi.w	r3, r3, #32
 8000d20:	6023      	strmi	r3, [r4, #0]
 8000d22:	b11d      	cbz	r5, 8000d2c <_printf_i+0x1a0>
 8000d24:	2310      	movs	r3, #16
 8000d26:	e7ab      	b.n	8000c80 <_printf_i+0xf4>
 8000d28:	4826      	ldr	r0, [pc, #152]	@ (8000dc4 <_printf_i+0x238>)
 8000d2a:	e7e9      	b.n	8000d00 <_printf_i+0x174>
 8000d2c:	6823      	ldr	r3, [r4, #0]
 8000d2e:	f023 0320 	bic.w	r3, r3, #32
 8000d32:	6023      	str	r3, [r4, #0]
 8000d34:	e7f6      	b.n	8000d24 <_printf_i+0x198>
 8000d36:	4616      	mov	r6, r2
 8000d38:	e7bd      	b.n	8000cb6 <_printf_i+0x12a>
 8000d3a:	6833      	ldr	r3, [r6, #0]
 8000d3c:	6825      	ldr	r5, [r4, #0]
 8000d3e:	1d18      	adds	r0, r3, #4
 8000d40:	6961      	ldr	r1, [r4, #20]
 8000d42:	6030      	str	r0, [r6, #0]
 8000d44:	062e      	lsls	r6, r5, #24
 8000d46:	681b      	ldr	r3, [r3, #0]
 8000d48:	d501      	bpl.n	8000d4e <_printf_i+0x1c2>
 8000d4a:	6019      	str	r1, [r3, #0]
 8000d4c:	e002      	b.n	8000d54 <_printf_i+0x1c8>
 8000d4e:	0668      	lsls	r0, r5, #25
 8000d50:	d5fb      	bpl.n	8000d4a <_printf_i+0x1be>
 8000d52:	8019      	strh	r1, [r3, #0]
 8000d54:	2300      	movs	r3, #0
 8000d56:	4616      	mov	r6, r2
 8000d58:	6123      	str	r3, [r4, #16]
 8000d5a:	e7bc      	b.n	8000cd6 <_printf_i+0x14a>
 8000d5c:	6833      	ldr	r3, [r6, #0]
 8000d5e:	2100      	movs	r1, #0
 8000d60:	1d1a      	adds	r2, r3, #4
 8000d62:	6032      	str	r2, [r6, #0]
 8000d64:	681e      	ldr	r6, [r3, #0]
 8000d66:	6862      	ldr	r2, [r4, #4]
 8000d68:	4630      	mov	r0, r6
 8000d6a:	f000 f97b 	bl	8001064 <memchr>
 8000d6e:	b108      	cbz	r0, 8000d74 <_printf_i+0x1e8>
 8000d70:	1b80      	subs	r0, r0, r6
 8000d72:	6060      	str	r0, [r4, #4]
 8000d74:	6863      	ldr	r3, [r4, #4]
 8000d76:	6123      	str	r3, [r4, #16]
 8000d78:	2300      	movs	r3, #0
 8000d7a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000d7e:	e7aa      	b.n	8000cd6 <_printf_i+0x14a>
 8000d80:	4632      	mov	r2, r6
 8000d82:	4649      	mov	r1, r9
 8000d84:	4640      	mov	r0, r8
 8000d86:	6923      	ldr	r3, [r4, #16]
 8000d88:	47d0      	blx	sl
 8000d8a:	3001      	adds	r0, #1
 8000d8c:	d0ad      	beq.n	8000cea <_printf_i+0x15e>
 8000d8e:	6823      	ldr	r3, [r4, #0]
 8000d90:	079b      	lsls	r3, r3, #30
 8000d92:	d413      	bmi.n	8000dbc <_printf_i+0x230>
 8000d94:	68e0      	ldr	r0, [r4, #12]
 8000d96:	9b03      	ldr	r3, [sp, #12]
 8000d98:	4298      	cmp	r0, r3
 8000d9a:	bfb8      	it	lt
 8000d9c:	4618      	movlt	r0, r3
 8000d9e:	e7a6      	b.n	8000cee <_printf_i+0x162>
 8000da0:	2301      	movs	r3, #1
 8000da2:	4632      	mov	r2, r6
 8000da4:	4649      	mov	r1, r9
 8000da6:	4640      	mov	r0, r8
 8000da8:	47d0      	blx	sl
 8000daa:	3001      	adds	r0, #1
 8000dac:	d09d      	beq.n	8000cea <_printf_i+0x15e>
 8000dae:	3501      	adds	r5, #1
 8000db0:	68e3      	ldr	r3, [r4, #12]
 8000db2:	9903      	ldr	r1, [sp, #12]
 8000db4:	1a5b      	subs	r3, r3, r1
 8000db6:	42ab      	cmp	r3, r5
 8000db8:	dcf2      	bgt.n	8000da0 <_printf_i+0x214>
 8000dba:	e7eb      	b.n	8000d94 <_printf_i+0x208>
 8000dbc:	2500      	movs	r5, #0
 8000dbe:	f104 0619 	add.w	r6, r4, #25
 8000dc2:	e7f5      	b.n	8000db0 <_printf_i+0x224>
 8000dc4:	080011b6 	.word	0x080011b6
 8000dc8:	080011c7 	.word	0x080011c7

08000dcc <__sflush_r>:
 8000dcc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dd2:	0716      	lsls	r6, r2, #28
 8000dd4:	4605      	mov	r5, r0
 8000dd6:	460c      	mov	r4, r1
 8000dd8:	d454      	bmi.n	8000e84 <__sflush_r+0xb8>
 8000dda:	684b      	ldr	r3, [r1, #4]
 8000ddc:	2b00      	cmp	r3, #0
 8000dde:	dc02      	bgt.n	8000de6 <__sflush_r+0x1a>
 8000de0:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000de2:	2b00      	cmp	r3, #0
 8000de4:	dd48      	ble.n	8000e78 <__sflush_r+0xac>
 8000de6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000de8:	2e00      	cmp	r6, #0
 8000dea:	d045      	beq.n	8000e78 <__sflush_r+0xac>
 8000dec:	2300      	movs	r3, #0
 8000dee:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000df2:	682f      	ldr	r7, [r5, #0]
 8000df4:	6a21      	ldr	r1, [r4, #32]
 8000df6:	602b      	str	r3, [r5, #0]
 8000df8:	d030      	beq.n	8000e5c <__sflush_r+0x90>
 8000dfa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000dfc:	89a3      	ldrh	r3, [r4, #12]
 8000dfe:	0759      	lsls	r1, r3, #29
 8000e00:	d505      	bpl.n	8000e0e <__sflush_r+0x42>
 8000e02:	6863      	ldr	r3, [r4, #4]
 8000e04:	1ad2      	subs	r2, r2, r3
 8000e06:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000e08:	b10b      	cbz	r3, 8000e0e <__sflush_r+0x42>
 8000e0a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000e0c:	1ad2      	subs	r2, r2, r3
 8000e0e:	2300      	movs	r3, #0
 8000e10:	4628      	mov	r0, r5
 8000e12:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000e14:	6a21      	ldr	r1, [r4, #32]
 8000e16:	47b0      	blx	r6
 8000e18:	1c43      	adds	r3, r0, #1
 8000e1a:	89a3      	ldrh	r3, [r4, #12]
 8000e1c:	d106      	bne.n	8000e2c <__sflush_r+0x60>
 8000e1e:	6829      	ldr	r1, [r5, #0]
 8000e20:	291d      	cmp	r1, #29
 8000e22:	d82b      	bhi.n	8000e7c <__sflush_r+0xb0>
 8000e24:	4a28      	ldr	r2, [pc, #160]	@ (8000ec8 <__sflush_r+0xfc>)
 8000e26:	410a      	asrs	r2, r1
 8000e28:	07d6      	lsls	r6, r2, #31
 8000e2a:	d427      	bmi.n	8000e7c <__sflush_r+0xb0>
 8000e2c:	2200      	movs	r2, #0
 8000e2e:	6062      	str	r2, [r4, #4]
 8000e30:	6922      	ldr	r2, [r4, #16]
 8000e32:	04d9      	lsls	r1, r3, #19
 8000e34:	6022      	str	r2, [r4, #0]
 8000e36:	d504      	bpl.n	8000e42 <__sflush_r+0x76>
 8000e38:	1c42      	adds	r2, r0, #1
 8000e3a:	d101      	bne.n	8000e40 <__sflush_r+0x74>
 8000e3c:	682b      	ldr	r3, [r5, #0]
 8000e3e:	b903      	cbnz	r3, 8000e42 <__sflush_r+0x76>
 8000e40:	6560      	str	r0, [r4, #84]	@ 0x54
 8000e42:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000e44:	602f      	str	r7, [r5, #0]
 8000e46:	b1b9      	cbz	r1, 8000e78 <__sflush_r+0xac>
 8000e48:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000e4c:	4299      	cmp	r1, r3
 8000e4e:	d002      	beq.n	8000e56 <__sflush_r+0x8a>
 8000e50:	4628      	mov	r0, r5
 8000e52:	f7ff fbf3 	bl	800063c <_free_r>
 8000e56:	2300      	movs	r3, #0
 8000e58:	6363      	str	r3, [r4, #52]	@ 0x34
 8000e5a:	e00d      	b.n	8000e78 <__sflush_r+0xac>
 8000e5c:	2301      	movs	r3, #1
 8000e5e:	4628      	mov	r0, r5
 8000e60:	47b0      	blx	r6
 8000e62:	4602      	mov	r2, r0
 8000e64:	1c50      	adds	r0, r2, #1
 8000e66:	d1c9      	bne.n	8000dfc <__sflush_r+0x30>
 8000e68:	682b      	ldr	r3, [r5, #0]
 8000e6a:	2b00      	cmp	r3, #0
 8000e6c:	d0c6      	beq.n	8000dfc <__sflush_r+0x30>
 8000e6e:	2b1d      	cmp	r3, #29
 8000e70:	d001      	beq.n	8000e76 <__sflush_r+0xaa>
 8000e72:	2b16      	cmp	r3, #22
 8000e74:	d11d      	bne.n	8000eb2 <__sflush_r+0xe6>
 8000e76:	602f      	str	r7, [r5, #0]
 8000e78:	2000      	movs	r0, #0
 8000e7a:	e021      	b.n	8000ec0 <__sflush_r+0xf4>
 8000e7c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000e80:	b21b      	sxth	r3, r3
 8000e82:	e01a      	b.n	8000eba <__sflush_r+0xee>
 8000e84:	690f      	ldr	r7, [r1, #16]
 8000e86:	2f00      	cmp	r7, #0
 8000e88:	d0f6      	beq.n	8000e78 <__sflush_r+0xac>
 8000e8a:	0793      	lsls	r3, r2, #30
 8000e8c:	bf18      	it	ne
 8000e8e:	2300      	movne	r3, #0
 8000e90:	680e      	ldr	r6, [r1, #0]
 8000e92:	bf08      	it	eq
 8000e94:	694b      	ldreq	r3, [r1, #20]
 8000e96:	1bf6      	subs	r6, r6, r7
 8000e98:	600f      	str	r7, [r1, #0]
 8000e9a:	608b      	str	r3, [r1, #8]
 8000e9c:	2e00      	cmp	r6, #0
 8000e9e:	ddeb      	ble.n	8000e78 <__sflush_r+0xac>
 8000ea0:	4633      	mov	r3, r6
 8000ea2:	463a      	mov	r2, r7
 8000ea4:	4628      	mov	r0, r5
 8000ea6:	6a21      	ldr	r1, [r4, #32]
 8000ea8:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8000eac:	47e0      	blx	ip
 8000eae:	2800      	cmp	r0, #0
 8000eb0:	dc07      	bgt.n	8000ec2 <__sflush_r+0xf6>
 8000eb2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000eb6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000eba:	f04f 30ff 	mov.w	r0, #4294967295
 8000ebe:	81a3      	strh	r3, [r4, #12]
 8000ec0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ec2:	4407      	add	r7, r0
 8000ec4:	1a36      	subs	r6, r6, r0
 8000ec6:	e7e9      	b.n	8000e9c <__sflush_r+0xd0>
 8000ec8:	dfbffffe 	.word	0xdfbffffe

08000ecc <_fflush_r>:
 8000ecc:	b538      	push	{r3, r4, r5, lr}
 8000ece:	690b      	ldr	r3, [r1, #16]
 8000ed0:	4605      	mov	r5, r0
 8000ed2:	460c      	mov	r4, r1
 8000ed4:	b913      	cbnz	r3, 8000edc <_fflush_r+0x10>
 8000ed6:	2500      	movs	r5, #0
 8000ed8:	4628      	mov	r0, r5
 8000eda:	bd38      	pop	{r3, r4, r5, pc}
 8000edc:	b118      	cbz	r0, 8000ee6 <_fflush_r+0x1a>
 8000ede:	6a03      	ldr	r3, [r0, #32]
 8000ee0:	b90b      	cbnz	r3, 8000ee6 <_fflush_r+0x1a>
 8000ee2:	f7ff faa3 	bl	800042c <__sinit>
 8000ee6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000eea:	2b00      	cmp	r3, #0
 8000eec:	d0f3      	beq.n	8000ed6 <_fflush_r+0xa>
 8000eee:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000ef0:	07d0      	lsls	r0, r2, #31
 8000ef2:	d404      	bmi.n	8000efe <_fflush_r+0x32>
 8000ef4:	0599      	lsls	r1, r3, #22
 8000ef6:	d402      	bmi.n	8000efe <_fflush_r+0x32>
 8000ef8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000efa:	f7ff fb9c 	bl	8000636 <__retarget_lock_acquire_recursive>
 8000efe:	4628      	mov	r0, r5
 8000f00:	4621      	mov	r1, r4
 8000f02:	f7ff ff63 	bl	8000dcc <__sflush_r>
 8000f06:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000f08:	4605      	mov	r5, r0
 8000f0a:	07da      	lsls	r2, r3, #31
 8000f0c:	d4e4      	bmi.n	8000ed8 <_fflush_r+0xc>
 8000f0e:	89a3      	ldrh	r3, [r4, #12]
 8000f10:	059b      	lsls	r3, r3, #22
 8000f12:	d4e1      	bmi.n	8000ed8 <_fflush_r+0xc>
 8000f14:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000f16:	f7ff fb8f 	bl	8000638 <__retarget_lock_release_recursive>
 8000f1a:	e7dd      	b.n	8000ed8 <_fflush_r+0xc>

08000f1c <__swbuf_r>:
 8000f1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f1e:	460e      	mov	r6, r1
 8000f20:	4614      	mov	r4, r2
 8000f22:	4605      	mov	r5, r0
 8000f24:	b118      	cbz	r0, 8000f2e <__swbuf_r+0x12>
 8000f26:	6a03      	ldr	r3, [r0, #32]
 8000f28:	b90b      	cbnz	r3, 8000f2e <__swbuf_r+0x12>
 8000f2a:	f7ff fa7f 	bl	800042c <__sinit>
 8000f2e:	69a3      	ldr	r3, [r4, #24]
 8000f30:	60a3      	str	r3, [r4, #8]
 8000f32:	89a3      	ldrh	r3, [r4, #12]
 8000f34:	071a      	lsls	r2, r3, #28
 8000f36:	d501      	bpl.n	8000f3c <__swbuf_r+0x20>
 8000f38:	6923      	ldr	r3, [r4, #16]
 8000f3a:	b943      	cbnz	r3, 8000f4e <__swbuf_r+0x32>
 8000f3c:	4621      	mov	r1, r4
 8000f3e:	4628      	mov	r0, r5
 8000f40:	f000 f82a 	bl	8000f98 <__swsetup_r>
 8000f44:	b118      	cbz	r0, 8000f4e <__swbuf_r+0x32>
 8000f46:	f04f 37ff 	mov.w	r7, #4294967295
 8000f4a:	4638      	mov	r0, r7
 8000f4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f4e:	6823      	ldr	r3, [r4, #0]
 8000f50:	6922      	ldr	r2, [r4, #16]
 8000f52:	b2f6      	uxtb	r6, r6
 8000f54:	1a98      	subs	r0, r3, r2
 8000f56:	6963      	ldr	r3, [r4, #20]
 8000f58:	4637      	mov	r7, r6
 8000f5a:	4283      	cmp	r3, r0
 8000f5c:	dc05      	bgt.n	8000f6a <__swbuf_r+0x4e>
 8000f5e:	4621      	mov	r1, r4
 8000f60:	4628      	mov	r0, r5
 8000f62:	f7ff ffb3 	bl	8000ecc <_fflush_r>
 8000f66:	2800      	cmp	r0, #0
 8000f68:	d1ed      	bne.n	8000f46 <__swbuf_r+0x2a>
 8000f6a:	68a3      	ldr	r3, [r4, #8]
 8000f6c:	3b01      	subs	r3, #1
 8000f6e:	60a3      	str	r3, [r4, #8]
 8000f70:	6823      	ldr	r3, [r4, #0]
 8000f72:	1c5a      	adds	r2, r3, #1
 8000f74:	6022      	str	r2, [r4, #0]
 8000f76:	701e      	strb	r6, [r3, #0]
 8000f78:	6962      	ldr	r2, [r4, #20]
 8000f7a:	1c43      	adds	r3, r0, #1
 8000f7c:	429a      	cmp	r2, r3
 8000f7e:	d004      	beq.n	8000f8a <__swbuf_r+0x6e>
 8000f80:	89a3      	ldrh	r3, [r4, #12]
 8000f82:	07db      	lsls	r3, r3, #31
 8000f84:	d5e1      	bpl.n	8000f4a <__swbuf_r+0x2e>
 8000f86:	2e0a      	cmp	r6, #10
 8000f88:	d1df      	bne.n	8000f4a <__swbuf_r+0x2e>
 8000f8a:	4621      	mov	r1, r4
 8000f8c:	4628      	mov	r0, r5
 8000f8e:	f7ff ff9d 	bl	8000ecc <_fflush_r>
 8000f92:	2800      	cmp	r0, #0
 8000f94:	d0d9      	beq.n	8000f4a <__swbuf_r+0x2e>
 8000f96:	e7d6      	b.n	8000f46 <__swbuf_r+0x2a>

08000f98 <__swsetup_r>:
 8000f98:	b538      	push	{r3, r4, r5, lr}
 8000f9a:	4b29      	ldr	r3, [pc, #164]	@ (8001040 <__swsetup_r+0xa8>)
 8000f9c:	4605      	mov	r5, r0
 8000f9e:	6818      	ldr	r0, [r3, #0]
 8000fa0:	460c      	mov	r4, r1
 8000fa2:	b118      	cbz	r0, 8000fac <__swsetup_r+0x14>
 8000fa4:	6a03      	ldr	r3, [r0, #32]
 8000fa6:	b90b      	cbnz	r3, 8000fac <__swsetup_r+0x14>
 8000fa8:	f7ff fa40 	bl	800042c <__sinit>
 8000fac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fb0:	0719      	lsls	r1, r3, #28
 8000fb2:	d422      	bmi.n	8000ffa <__swsetup_r+0x62>
 8000fb4:	06da      	lsls	r2, r3, #27
 8000fb6:	d407      	bmi.n	8000fc8 <__swsetup_r+0x30>
 8000fb8:	2209      	movs	r2, #9
 8000fba:	602a      	str	r2, [r5, #0]
 8000fbc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000fc0:	f04f 30ff 	mov.w	r0, #4294967295
 8000fc4:	81a3      	strh	r3, [r4, #12]
 8000fc6:	e033      	b.n	8001030 <__swsetup_r+0x98>
 8000fc8:	0758      	lsls	r0, r3, #29
 8000fca:	d512      	bpl.n	8000ff2 <__swsetup_r+0x5a>
 8000fcc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000fce:	b141      	cbz	r1, 8000fe2 <__swsetup_r+0x4a>
 8000fd0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000fd4:	4299      	cmp	r1, r3
 8000fd6:	d002      	beq.n	8000fde <__swsetup_r+0x46>
 8000fd8:	4628      	mov	r0, r5
 8000fda:	f7ff fb2f 	bl	800063c <_free_r>
 8000fde:	2300      	movs	r3, #0
 8000fe0:	6363      	str	r3, [r4, #52]	@ 0x34
 8000fe2:	89a3      	ldrh	r3, [r4, #12]
 8000fe4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000fe8:	81a3      	strh	r3, [r4, #12]
 8000fea:	2300      	movs	r3, #0
 8000fec:	6063      	str	r3, [r4, #4]
 8000fee:	6923      	ldr	r3, [r4, #16]
 8000ff0:	6023      	str	r3, [r4, #0]
 8000ff2:	89a3      	ldrh	r3, [r4, #12]
 8000ff4:	f043 0308 	orr.w	r3, r3, #8
 8000ff8:	81a3      	strh	r3, [r4, #12]
 8000ffa:	6923      	ldr	r3, [r4, #16]
 8000ffc:	b94b      	cbnz	r3, 8001012 <__swsetup_r+0x7a>
 8000ffe:	89a3      	ldrh	r3, [r4, #12]
 8001000:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001004:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001008:	d003      	beq.n	8001012 <__swsetup_r+0x7a>
 800100a:	4621      	mov	r1, r4
 800100c:	4628      	mov	r0, r5
 800100e:	f000 f85c 	bl	80010ca <__smakebuf_r>
 8001012:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001016:	f013 0201 	ands.w	r2, r3, #1
 800101a:	d00a      	beq.n	8001032 <__swsetup_r+0x9a>
 800101c:	2200      	movs	r2, #0
 800101e:	60a2      	str	r2, [r4, #8]
 8001020:	6962      	ldr	r2, [r4, #20]
 8001022:	4252      	negs	r2, r2
 8001024:	61a2      	str	r2, [r4, #24]
 8001026:	6922      	ldr	r2, [r4, #16]
 8001028:	b942      	cbnz	r2, 800103c <__swsetup_r+0xa4>
 800102a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800102e:	d1c5      	bne.n	8000fbc <__swsetup_r+0x24>
 8001030:	bd38      	pop	{r3, r4, r5, pc}
 8001032:	0799      	lsls	r1, r3, #30
 8001034:	bf58      	it	pl
 8001036:	6962      	ldrpl	r2, [r4, #20]
 8001038:	60a2      	str	r2, [r4, #8]
 800103a:	e7f4      	b.n	8001026 <__swsetup_r+0x8e>
 800103c:	2000      	movs	r0, #0
 800103e:	e7f7      	b.n	8001030 <__swsetup_r+0x98>
 8001040:	2000000c 	.word	0x2000000c

08001044 <_sbrk_r>:
 8001044:	b538      	push	{r3, r4, r5, lr}
 8001046:	2300      	movs	r3, #0
 8001048:	4d05      	ldr	r5, [pc, #20]	@ (8001060 <_sbrk_r+0x1c>)
 800104a:	4604      	mov	r4, r0
 800104c:	4608      	mov	r0, r1
 800104e:	602b      	str	r3, [r5, #0]
 8001050:	f7ff f900 	bl	8000254 <_sbrk>
 8001054:	1c43      	adds	r3, r0, #1
 8001056:	d102      	bne.n	800105e <_sbrk_r+0x1a>
 8001058:	682b      	ldr	r3, [r5, #0]
 800105a:	b103      	cbz	r3, 800105e <_sbrk_r+0x1a>
 800105c:	6023      	str	r3, [r4, #0]
 800105e:	bd38      	pop	{r3, r4, r5, pc}
 8001060:	200001b8 	.word	0x200001b8

08001064 <memchr>:
 8001064:	4603      	mov	r3, r0
 8001066:	b510      	push	{r4, lr}
 8001068:	b2c9      	uxtb	r1, r1
 800106a:	4402      	add	r2, r0
 800106c:	4293      	cmp	r3, r2
 800106e:	4618      	mov	r0, r3
 8001070:	d101      	bne.n	8001076 <memchr+0x12>
 8001072:	2000      	movs	r0, #0
 8001074:	e003      	b.n	800107e <memchr+0x1a>
 8001076:	7804      	ldrb	r4, [r0, #0]
 8001078:	3301      	adds	r3, #1
 800107a:	428c      	cmp	r4, r1
 800107c:	d1f6      	bne.n	800106c <memchr+0x8>
 800107e:	bd10      	pop	{r4, pc}

08001080 <__swhatbuf_r>:
 8001080:	b570      	push	{r4, r5, r6, lr}
 8001082:	460c      	mov	r4, r1
 8001084:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001088:	4615      	mov	r5, r2
 800108a:	2900      	cmp	r1, #0
 800108c:	461e      	mov	r6, r3
 800108e:	b096      	sub	sp, #88	@ 0x58
 8001090:	da0c      	bge.n	80010ac <__swhatbuf_r+0x2c>
 8001092:	89a3      	ldrh	r3, [r4, #12]
 8001094:	2100      	movs	r1, #0
 8001096:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800109a:	bf14      	ite	ne
 800109c:	2340      	movne	r3, #64	@ 0x40
 800109e:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80010a2:	2000      	movs	r0, #0
 80010a4:	6031      	str	r1, [r6, #0]
 80010a6:	602b      	str	r3, [r5, #0]
 80010a8:	b016      	add	sp, #88	@ 0x58
 80010aa:	bd70      	pop	{r4, r5, r6, pc}
 80010ac:	466a      	mov	r2, sp
 80010ae:	f000 f849 	bl	8001144 <_fstat_r>
 80010b2:	2800      	cmp	r0, #0
 80010b4:	dbed      	blt.n	8001092 <__swhatbuf_r+0x12>
 80010b6:	9901      	ldr	r1, [sp, #4]
 80010b8:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80010bc:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80010c0:	4259      	negs	r1, r3
 80010c2:	4159      	adcs	r1, r3
 80010c4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80010c8:	e7eb      	b.n	80010a2 <__swhatbuf_r+0x22>

080010ca <__smakebuf_r>:
 80010ca:	898b      	ldrh	r3, [r1, #12]
 80010cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80010ce:	079d      	lsls	r5, r3, #30
 80010d0:	4606      	mov	r6, r0
 80010d2:	460c      	mov	r4, r1
 80010d4:	d507      	bpl.n	80010e6 <__smakebuf_r+0x1c>
 80010d6:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80010da:	6023      	str	r3, [r4, #0]
 80010dc:	6123      	str	r3, [r4, #16]
 80010de:	2301      	movs	r3, #1
 80010e0:	6163      	str	r3, [r4, #20]
 80010e2:	b003      	add	sp, #12
 80010e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80010e6:	466a      	mov	r2, sp
 80010e8:	ab01      	add	r3, sp, #4
 80010ea:	f7ff ffc9 	bl	8001080 <__swhatbuf_r>
 80010ee:	9f00      	ldr	r7, [sp, #0]
 80010f0:	4605      	mov	r5, r0
 80010f2:	4639      	mov	r1, r7
 80010f4:	4630      	mov	r0, r6
 80010f6:	f7ff fb0b 	bl	8000710 <_malloc_r>
 80010fa:	b948      	cbnz	r0, 8001110 <__smakebuf_r+0x46>
 80010fc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001100:	059a      	lsls	r2, r3, #22
 8001102:	d4ee      	bmi.n	80010e2 <__smakebuf_r+0x18>
 8001104:	f023 0303 	bic.w	r3, r3, #3
 8001108:	f043 0302 	orr.w	r3, r3, #2
 800110c:	81a3      	strh	r3, [r4, #12]
 800110e:	e7e2      	b.n	80010d6 <__smakebuf_r+0xc>
 8001110:	89a3      	ldrh	r3, [r4, #12]
 8001112:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001116:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800111a:	81a3      	strh	r3, [r4, #12]
 800111c:	9b01      	ldr	r3, [sp, #4]
 800111e:	6020      	str	r0, [r4, #0]
 8001120:	b15b      	cbz	r3, 800113a <__smakebuf_r+0x70>
 8001122:	4630      	mov	r0, r6
 8001124:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001128:	f000 f81e 	bl	8001168 <_isatty_r>
 800112c:	b128      	cbz	r0, 800113a <__smakebuf_r+0x70>
 800112e:	89a3      	ldrh	r3, [r4, #12]
 8001130:	f023 0303 	bic.w	r3, r3, #3
 8001134:	f043 0301 	orr.w	r3, r3, #1
 8001138:	81a3      	strh	r3, [r4, #12]
 800113a:	89a3      	ldrh	r3, [r4, #12]
 800113c:	431d      	orrs	r5, r3
 800113e:	81a5      	strh	r5, [r4, #12]
 8001140:	e7cf      	b.n	80010e2 <__smakebuf_r+0x18>
	...

08001144 <_fstat_r>:
 8001144:	b538      	push	{r3, r4, r5, lr}
 8001146:	2300      	movs	r3, #0
 8001148:	4d06      	ldr	r5, [pc, #24]	@ (8001164 <_fstat_r+0x20>)
 800114a:	4604      	mov	r4, r0
 800114c:	4608      	mov	r0, r1
 800114e:	4611      	mov	r1, r2
 8001150:	602b      	str	r3, [r5, #0]
 8001152:	f7ff f859 	bl	8000208 <_fstat>
 8001156:	1c43      	adds	r3, r0, #1
 8001158:	d102      	bne.n	8001160 <_fstat_r+0x1c>
 800115a:	682b      	ldr	r3, [r5, #0]
 800115c:	b103      	cbz	r3, 8001160 <_fstat_r+0x1c>
 800115e:	6023      	str	r3, [r4, #0]
 8001160:	bd38      	pop	{r3, r4, r5, pc}
 8001162:	bf00      	nop
 8001164:	200001b8 	.word	0x200001b8

08001168 <_isatty_r>:
 8001168:	b538      	push	{r3, r4, r5, lr}
 800116a:	2300      	movs	r3, #0
 800116c:	4d05      	ldr	r5, [pc, #20]	@ (8001184 <_isatty_r+0x1c>)
 800116e:	4604      	mov	r4, r0
 8001170:	4608      	mov	r0, r1
 8001172:	602b      	str	r3, [r5, #0]
 8001174:	f7ff f857 	bl	8000226 <_isatty>
 8001178:	1c43      	adds	r3, r0, #1
 800117a:	d102      	bne.n	8001182 <_isatty_r+0x1a>
 800117c:	682b      	ldr	r3, [r5, #0]
 800117e:	b103      	cbz	r3, 8001182 <_isatty_r+0x1a>
 8001180:	6023      	str	r3, [r4, #0]
 8001182:	bd38      	pop	{r3, r4, r5, pc}
 8001184:	200001b8 	.word	0x200001b8

08001188 <_init>:
 8001188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800118a:	bf00      	nop
 800118c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800118e:	bc08      	pop	{r3}
 8001190:	469e      	mov	lr, r3
 8001192:	4770      	bx	lr

08001194 <_fini>:
 8001194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001196:	bf00      	nop
 8001198:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800119a:	bc08      	pop	{r3}
 800119c:	469e      	mov	lr, r3
 800119e:	4770      	bx	lr
